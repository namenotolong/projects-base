{"version":3,"sources":["webpack:///./src/App.vue?861b","webpack:///./src/App.vue","webpack:///src/App.vue","webpack:///./src/components/HomeMenu.vue?7c2f","webpack:///./src/components/HomeMenu.vue","webpack:///src/components/HomeMenu.vue","webpack:///./src/utils/utils.js","webpack:///./src/config/axiosConfig.js","webpack:///./src/api/database.js","webpack:///src/view/Database.vue","webpack:///./src/view/Database.vue?1a0a","webpack:///./src/view/Database.vue","webpack:///./src/router/index.js","webpack:///./src/main.js"],"names":["selectortype_template_index_0_src_App","render","_h","this","$createElement","_c","_self","attrs","id","staticRenderFns","src_App","__webpack_require__","normalizeComponent","name","components_HomeMenu","_vm","staticClass","on","click","$event","stopPropagation","remove","apply","arguments","_v","placement","width","model","value","callback","$$v","showDelPop","expression","staticStyle","text-align","margin","size","type","deleteConversation","slot","src_components_HomeMenu","HomeMenu_normalizeComponent","props","data","friendInfo","computed","userInfo","$store","state","user","methods","$emit","conversation","ssrContext","CryptoJS","enc","Utf8","parse","axiosConfig","AxiosConfig","_this","classCallCheck_default","axiosService","axios","create","baseURL","addInterceptor","getRequest","url","get","loading","interceptors","request","use","config","Vue","prototype","$loading","lock","text","spinner","background","authorization","localStorage","getItem","headers","err","promise_default","a","reject","response","close","success","console","log","Message","error","message","code","window","removeItem","router","push","path","resolve","http","runSql","params","post","Database","components","codemirror","vue_codemirror","homeMenu","created","document","addEventListener","isShowMenu","e","button","showTableData","pageSize","currentPage","menuTop","menuLeft","label","children","isLeaf","cmOptions","tabSize","mode","theme","lineNumbers","line","viewportMargin","Infinity","highlightDifferences","autofocus","indentUnit","smartIndent","readOnly","showCursorWhenSelecting","firstLineNumber","matchBrackets","lineMapping","styleActiveLine","extraKeys","Ctrl","hintOptions","completeSingle","tables","users","countries","score","codeSnippets","editableTabsValue","editableTabs","tabIndex","connections","curClickConnection","curDbs","curTables","sqlContent","edittableTabsMap","map_default","edittableTabsNameMap","curClickTab","addConnDialog","editConnDialog","supportTypes","ruleForm","dbType","host","loginUser","password","editConnForm","rules","required","trigger","min","max","mounted","listTypes","celldblclick","column","event","save","clipboardData","setData","preventDefault","execCommand","removeEventListener","$message","_this2","asyncToGenerator_default","regenerator_default","mark","_callee","wrap","_context","prev","next","sent","stop","handleSizeChange","val","handleCurrentChange","tableData","length","skipSize","slice","dbClick","row","_this3","_callee2","_context2","connId","database","tableClick","obj","_this4","_callee3","tabKey","tab","newTabName","_context3","table","title","connName","tableMeta","set","doQuery","handleOpen","key","queryConns","executeSql","sql","_this5","_callee4","result","_context4","abrupt","listDbs","_this6","_callee5","rest","_context5","_this7","_callee6","_context6","listConns","deletConn","_this8","_callee7","_context7","delete","editUpdateConn","_this9","_callee8","_context8","saveConn","_this10","_callee9","_context9","refreshDb","_this11","_callee10","_context10","removeTab","targetName","_this12","tabs","activeName","forEach","index","nextTab","filter","flag","clickTab","tabObj","dbNodeClick","leaf","checkRunSql","getSelection","toString","_this13","_callee11","_context11","submitForm","formName","_this14","$refs","validate","valid","resetForm","resetFields","showMenu","pageX","pageY","hiddenMenu","op","submitUpdateForm","_this15","view_Database","font-size","background-color","border","open","_l","contextmenu","_s","cell-click","prop","closable","tab-remove","tab-click","item","options","$set","header-click","current-page","page-sizes","page-size","layout","total","size-change","current-change","_e","visible","update:visible","ref","label-width","placeholder","style","left","top","src_view_Database","Database_normalizeComponent","Router","routes","component","meta","requiredAuth","jsonlint","require","$axios","Loading","ElementUI","el","h","App","template"],"mappings":"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","file":"static/js/app.c9069da549c3d1cadd62.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-51952100\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-51952100\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","<template>\r\n\r\n  <div id=\"app\">\r\n    <router-view/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: 'App',\r\n}\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"conversation-item-menu box-shadow1\"},[_c('span',{staticClass:\"menu-item operation-text\",on:{\"click\":function($event){$event.stopPropagation();return _vm.remove.apply(null, arguments)}}},[_vm._v(\"编辑\")]),_vm._v(\" \"),_c('el-popover',{attrs:{\"placement\":\"top\",\"width\":\"160\"},model:{value:(_vm.showDelPop),callback:function ($$v) {_vm.showDelPop=$$v},expression:\"showDelPop\"}},[_c('p',[_vm._v(\"是否确定删除？\")]),_vm._v(\" \"),_c('div',{staticStyle:{\"text-align\":\"right\",\"margin\":\"0\"}},[_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"text\"},on:{\"click\":function($event){_vm.showDelPop = false}}},[_vm._v(\"取消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\"},on:{\"click\":function($event){$event.stopPropagation();return _vm.deleteConversation.apply(null, arguments)}}},[_vm._v(\"确定\")])],1),_vm._v(\" \"),_c('span',{staticClass:\"menu-item operation-text\",attrs:{\"slot\":\"reference\"},on:{\"click\":function($event){$event.stopPropagation();return (function (){}).apply(null, arguments)}},slot:\"reference\"},[_vm._v(\"删除\")])])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-38fa574f\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/HomeMenu.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-38fa574f\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./HomeMenu.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./HomeMenu.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./HomeMenu.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-38fa574f\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./HomeMenu.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/HomeMenu.vue\n// module id = null\n// module chunks = ","<template>\r\n    <div class=\"conversation-item-menu box-shadow1\">\r\n        <span class=\"menu-item operation-text\" @click.stop=\"remove\">编辑</span>\r\n        <el-popover placement=\"top\" width=\"160\" v-model=\"showDelPop\">\r\n            <p>是否确定删除？</p>\r\n            <div style=\"text-align: right; margin: 0\">\r\n                <el-button size=\"mini\" type=\"text\" @click=\"showDelPop = false\">取消</el-button>\r\n                <el-button type=\"primary\" size=\"mini\" @click.stop=\"deleteConversation\">确定</el-button>\r\n            </div>\r\n            <span slot=\"reference\" class=\"menu-item operation-text\" @click.stop=\"()=>{}\">删除</span>\r\n        </el-popover>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nexport default {\r\n    name: 'HomeMenu',\r\n    props: ['conversation'],\r\n    data() {\r\n        return {\r\n            showDelPop: false,\r\n            friendInfo: {}\r\n        }\r\n    },\r\n    computed: {\r\n        userInfo() {\r\n            return this.$store.state.user.userInfo\r\n        }\r\n    },\r\n    methods: {\r\n        remove() {\r\n            this.$emit('hiddenMenu', this.conversation, \"edit\")\r\n        },\r\n       \r\n        deleteConversation() {\r\n            this.$emit('hiddenMenu', this.conversation, \"remove\")\r\n        }\r\n    }\r\n}\r\n</script>\r\n  \r\n<style>\r\n.conversation-item-menu {\r\n    padding: 5px;\r\n}\r\n\r\n.box-shadow1 {\r\n    box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.menu-item {\r\n    display: block;\r\n    margin-top: 5px;\r\n}\r\n\r\n.operation-text {\r\n    cursor: pointer;\r\n    padding: 2px 4px;\r\n    border-radius: 3px;\r\n    color: #7e7e7e;\r\n    transition: all .5s ease-in;\r\n}\r\n\r\n.operation-text:hover {\r\n    background-color: #E9EAEC;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n</style>\r\n  \r\n  \n\n\n// WEBPACK FOOTER //\n// src/components/HomeMenu.vue","import CryptoJS from 'crypto-js'\r\nconst KEY = CryptoJS.enc.Utf8.parse(\"1234567890123456\");\r\nconst IV = CryptoJS.enc.Utf8.parse('1234567890123456');\r\n/**\r\n * 时间戳\r\n * @param {*} timestamp  时间戳\r\n */\r\nconst timestampToTime = (timestamp) => {\r\n  let date = new Date(timestamp) // 时间戳为10位需*1000，时间戳为13位的话不需乘1000\r\n  let Y = date.getFullYear() + '-'\r\n  let M =\r\n        (date.getMonth() + 1 < 10\r\n          ? '0' + (date.getMonth() + 1)\r\n          : date.getMonth() + 1) + '-'\r\n  let D =\r\n        (date.getDate() < 10 ? '0' + date.getDate() : date.getDate()) + ' '\r\n  let h =\r\n        (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':'\r\n  let m =\r\n        (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) +\r\n        ':'\r\n  let s =\r\n        date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds()\r\n  return Y + M + D + h + m + s\r\n}\r\n/**\r\n * 存储localStorage\r\n */\r\nconst setStore = (name, content) => {\r\n  if (!name) return\r\n  if (typeof content !== 'string') {\r\n    content = JSON.stringify(content)\r\n  }\r\n  window.localStorage.setItem(name, content)\r\n}\r\n\r\n/**\r\n * 获取localStorage\r\n */\r\nconst getStore = name => {\r\n  if (!name) return\r\n  return window.localStorage.getItem(name)\r\n}\r\n\r\n/**\r\n * 删除localStorage\r\n */\r\nconst removeStore = name => {\r\n  if (!name) return\r\n  window.localStorage.removeItem(name)\r\n}\r\n\r\n/**\r\n * 设置cookie\r\n **/\r\nfunction setCookie (name, value, day) {\r\n  let date = new Date()\r\n  date.setDate(date.getDate() + day)\r\n  document.cookie = name + '=' + value + ';expires=' + date\r\n};\r\n\r\n/**\r\n * 获取cookie\r\n **/\r\nfunction getCookie (name) {\r\n  let reg = RegExp(name + '=([^;]+)')\r\n  let arr = document.cookie.match(reg)\r\n  if (arr) {\r\n    return arr[1]\r\n  } else {\r\n    return ''\r\n  }\r\n};\r\n\r\n/**\r\n * 删除cookie\r\n **/\r\nfunction delCookie (name) {\r\n  setCookie(name, null, -1)\r\n};\r\n\r\n/**\r\n * aes加密\r\n * @param word\r\n * @param keyStr\r\n * @param ivStr\r\n * @returns {*|string}\r\n * @constructor\r\n */\r\nexport function encrypt(word, keyStr, ivStr) {\r\n  let key = KEY\r\n  let iv = IV\r\n\r\n  if (keyStr) {\r\n    key = CryptoJS.enc.Utf8.parse(keyStr);\r\n    iv = CryptoJS.enc.Utf8.parse(ivStr);\r\n  }\r\n\r\n  let srcs = CryptoJS.enc.Utf8.parse(word);\r\n  var encrypted = CryptoJS.AES.encrypt(srcs, key, {\r\n    iv: iv,\r\n    mode: CryptoJS.mode.CBC,\r\n    padding: CryptoJS.pad.ZeroPadding\r\n  });\r\n  // console.log(\"-=-=-=-\", encrypted.ciphertext)\r\n  return CryptoJS.enc.Base64.stringify(encrypted.ciphertext);\r\n\r\n}\r\n/**\r\n * AES 解密 ：字符串 key iv  返回base64\r\n *\r\n */\r\nexport function decrypt(word, keyStr, ivStr) {\r\n  let key  = KEY\r\n  let iv = IV\r\n\r\n  if (keyStr) {\r\n    key = CryptoJS.enc.Utf8.parse(keyStr);\r\n    iv = CryptoJS.enc.Utf8.parse(ivStr);\r\n  }\r\n\r\n  let base64 = CryptoJS.enc.Base64.parse(word);\r\n  let src = CryptoJS.enc.Base64.stringify(base64);\r\n\r\n  var decrypt = CryptoJS.AES.decrypt(src, key, {\r\n    iv: iv,\r\n    mode: CryptoJS.mode.CBC,\r\n    padding: CryptoJS.pad.ZeroPadding\r\n  });\r\n  var decryptedStr = decrypt.toString(CryptoJS.enc.Utf8);\r\n  return decryptedStr.toString();\r\n}\r\n\r\n/**\r\n * 将对象转化为get请求的url\r\n * @param {} obj\r\n */\r\nexport function converObjToUrl(obj) {\r\n  if(obj) {\r\n    let str = '?';\r\n    for (const key in obj) {\r\n      if (obj.hasOwnProperty(key)) {\r\n        const element = obj[key];\r\n        str += key + '=' + element + '&'\r\n      }\r\n    }\r\n    return str;\r\n  }\r\n}\r\n/**\r\n * 清除输入框内容\r\n * @param {} obj\r\n */\r\nexport function clearInput(obj) {\r\n  for (const key in obj) {\r\n    if (obj.hasOwnProperty(key)) {\r\n      obj[key] = '';\r\n    }\r\n  }\r\n}\r\n\r\nexport const baseURL = \"http://zhsdsb.top:8081\";\r\n/**\r\n * 导出\r\n **/\r\nexport {\r\n  timestampToTime,\r\n  setStore,\r\n  getStore,\r\n  removeStore,\r\n  setCookie,\r\n  getCookie,\r\n  delCookie,\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/utils.js","import { Message } from 'element-ui'\r\nimport { removeStore } from '../utils/utils'\r\nimport router from '../router';\r\nimport axios from 'axios';\r\nimport Vue from 'vue';\r\nclass AxiosConfig {\r\n  constructor() {\r\n    this.axiosService = axios.create({\r\n      baseURL: 'http://localhost:8083'\r\n    })\r\n    this.addInterceptor()\r\n    this.axiosService.getRequest = (url) => this.axiosService.get(url)\r\n  }\r\n  addInterceptor() {\r\n    let loading = null;\r\n    this.axiosService.interceptors.request.use(config => {\r\n      loading = Vue.prototype.$loading({\r\n        lock: true,\r\n        text: 'Loading',\r\n        spinner: 'el-icon-loading',\r\n        background: 'rgba(0, 0, 0, 0.7)'\r\n      });\r\n      let authorization = localStorage.getItem(\"token\")\r\n      if (authorization) {\r\n        config.headers.authorization = authorization\r\n      }\r\n      return config\r\n    }, err => {\r\n      return Promise.reject(err)\r\n    })\r\n    this.axiosService.interceptors.response.use(response => {\r\n      if (loading != null) {\r\n        loading.close();\r\n      }\r\n      if (!response.data.success && typeof response.data.success != 'undefined') {\r\n        console.log(response)\r\n        Message.error({ message: response.data.message })\r\n        //身份认证异常\r\n        if (response.data.code === 333) {\r\n          removeStore(\"token\")\r\n          router.push({ path: '/' })\r\n        }\r\n        //继续传播\r\n        if (response.data.code === 334) {\r\n          Promise.resolve(response);\r\n        }\r\n        return Promise.reject(response.data.message);\r\n      }\r\n      return response.data.data\r\n    }, err => {\r\n      Message.error({ message: err })\r\n      return Promise.reject(err)\r\n    })\r\n  }\r\n}\r\nexport default new AxiosConfig()\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/config/axiosConfig.js","import AxiosConfig from '../config/axiosConfig'\r\n\r\nlet http = AxiosConfig.axiosService\r\n\r\nexport const listConns = params => http.get('/database/list-conns', params)\r\n\r\n// export const listConns = params => {\r\n//     return [{ name: \"test\", \"id\": 1 }];\r\n// }\r\n\r\nexport const deleteConn = params => http.delete('/database/delete-conn/' + params)\r\n\r\nexport const updateConn = params => http.post('/database/update-conn', params)\r\n\r\nexport const saveConn = params => http.post('/database/save-conn', params)\r\n\r\nexport const listDbs = params => {\r\n    // console.log(params)\r\n    // return [{\r\n    //     name: 'test', type: 'database', connId: '1', database: 'test', leaf: 'false', tables: [\r\n    //         {\r\n    //             name: 'table1', type: 'table', connId: '1', database: 'test', leaf: 'true', connName: 'test'\r\n    //         }\r\n    //     ]\r\n    // },\r\n    // { name: 'test2', type: 'database', connId: '2', database: 'test2' }];\r\n    return http.get('/database/list-dbs/' + params)\r\n}\r\n\r\nexport const listTables = params => {\r\n    return http.get('/database/list-tables/' + params.connId + '/' + params.database)\r\n}\r\n\r\nexport const listSupportTypes = () => {\r\n    return http.get('/database/list-types')\r\n}\r\n\r\nexport const runSql = params => {\r\n    // console.log(params)\r\n    // return {\r\n    //     tableData: [{\r\n    //         date: '2016-05-02',\r\n    //         name: '王小虎',\r\n    //         address: '上海市普陀区金沙江路 1518 弄'\r\n    //     }, {\r\n    //         date: '2016-05-04',\r\n    //         name: '王小虎',\r\n    //         address: '上海市普陀区金沙江路 1517 弄'\r\n    //     }, {\r\n    //         date: '2016-05-01',\r\n    //         name: '王小虎',\r\n    //         address: '上海市普陀区金沙江路 1519 弄'\r\n    //     }, {\r\n    //         date: '2016-05-03',\r\n    //         name: '王小虎',\r\n    //         address: '上海市普陀区金沙江路 1516 弄'\r\n    //     }],\r\n    //     tableMeta: [{ name: \"date\", label: \"时间\" }, { name: \"name\", label: \"名称\" }, { name: \"address\", label: \"地址\" }]\r\n    // }\r\n    return http.post('/database/run-sql', params)\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/database.js","<template>\r\n    <div id=\"app\">\r\n        <div>\r\n            <el-header style=\"text-align: left; font-size: 12px; background-color: white;\">\r\n                <el-button type=\"primary\" @click=\"addConnDialog = true\">\r\n                    新建查询\r\n                </el-button>\r\n            </el-header>\r\n            <el-container style=\" border: 1px solid #eee\">\r\n                <el-aside width=\"200px\" style=\"background-color: rgb(238, 241, 246)\">\r\n                    <el-menu style=\"background-color: rgb(238, 241, 246)\" @open=\"handleOpen\">\r\n                        <el-submenu index=\"1\">\r\n                            <template slot=\"title\">\r\n                                <span>我的连接</span>\r\n                            </template>\r\n                            <div v-for=\"data in connections\" :key=\"data.id\">\r\n                                <div @contextmenu.prevent.stop=\"showMenu(data)\">\r\n                                    <el-menu-item :index=\"data.name\" @click=\"refreshDb(data.id)\">\r\n                                        {{data.name}}\r\n                                    </el-menu-item>\r\n                                </div>\r\n                            </div>\r\n                        </el-submenu>\r\n                    </el-menu>\r\n                </el-aside>\r\n                <el-aside width=\"300px\">\r\n                    <el-table :data=\"curDbs\" border style=\"width: 100%\" @cell-click=\"dbClick\">\r\n                        <el-table-column prop=\"database\" label=\"库\">\r\n                        </el-table-column>\r\n                    </el-table>\r\n                    <!-- <el-tree v-if=\"curDbTables.length > 0\" @node-click=\"dbNodeClick\" :props=\"props\" :data=\"curDbTables\">\r\n                    </el-tree> -->\r\n                </el-aside>\r\n                <el-aside>\r\n                    <el-table :data=\"curTables\" border style=\"width: 100%\" @cell-click=\"tableClick\">\r\n                        <el-table-column prop=\"table\" label=\"表\">\r\n                        </el-table-column>\r\n                    </el-table>\r\n                </el-aside>\r\n                <el-container v-if=\"editableTabs.length > 0\">\r\n                    <el-header style=\"text-align: left; font-size: 12px;\">\r\n                        <el-button @click=\"runSql\">运行</el-button>\r\n                        <el-button @click=\"checkRunSql\">选中运行</el-button>\r\n                    </el-header>\r\n                    <el-main>\r\n                        <el-tabs v-model=\"editableTabsValue\" type=\"card\" closable @tab-remove=\"removeTab\"\r\n                            @tab-click=\"clickTab\">\r\n                            <el-tab-pane :key=\"item.name\" v-for=\"(item, index) in editableTabs\" :label=\"item.title\"\r\n                                :name=\"item.name\">\r\n                            </el-tab-pane>\r\n                            <codemirror v-model=\"curClickTab.sqlContent\" :options=\"cmOptions\" />\r\n                        </el-tabs>\r\n                        <el-table :data=\"showTableData\" style=\"width: 100%;\" @header-click=\"celldblclick\">\r\n                            <el-table-column v-for=\"item in curClickTab.tableMeta\" :key=\"item.label\" :prop=\"item.label\"\r\n                                :label=\"item.label\" width=\"180\">\r\n                            </el-table-column>\r\n                        </el-table>\r\n                        <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\"\r\n                            :current-page=\"currentPage\" :page-sizes=\"[10, 20, 100, 200, 300, 400]\" :page-size=\"pageSize\"\r\n                            layout=\"total, sizes, prev, pager, next, jumper\" :total=\"curClickTab.tableData.length\">\r\n                        </el-pagination>\r\n                    </el-main>\r\n                </el-container>\r\n            </el-container>\r\n        </div>\r\n\r\n\r\n        <div>\r\n            <el-dialog title=\"添加连接\" :visible.sync=\"addConnDialog\">\r\n                <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n                    <el-form-item label=\"连接名称\" prop=\"name\">\r\n                        <el-input v-model=\"ruleForm.name\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"连接类型\" prop=\"dbType\">\r\n                        <el-select v-model=\"ruleForm.dbType\" placeholder=\"请选择连接类型\">\r\n                            <el-option v-for=\"item in supportTypes\" :key=\"item\" :label=\"item\" :value=\"item\">\r\n                            </el-option>\r\n                        </el-select>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"主机\" prop=\"host\">\r\n                        <el-input v-model=\"ruleForm.host\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"用户\" prop=\"loginUser\">\r\n                        <el-input v-model=\"ruleForm.loginUser\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"密码\" prop=\"password\">\r\n                        <el-input v-model=\"ruleForm.password\" type=\"password\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item>\r\n                        <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">立即创建</el-button>\r\n                        <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\r\n                    </el-form-item>\r\n                </el-form>\r\n            </el-dialog>\r\n        </div>\r\n\r\n        <div>\r\n            <el-dialog title=\"编辑连接\" :visible.sync=\"editConnDialog\">\r\n                <el-form :model=\"editConnForm\" :rules=\"rules\" ref=\"editConnForm\" label-width=\"100px\"\r\n                    class=\"demo-ruleForm\">\r\n                    <el-form-item label=\"连接名称\" prop=\"name\">\r\n                        <el-input v-model=\"editConnForm.name\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"连接类型\" prop=\"dbType\">\r\n                        <el-select v-model=\"editConnForm.dbType\" placeholder=\"请选择连接类型\">\r\n                            <el-option v-for=\"item in supportTypes\" :key=\"item\" :label=\"item\" :value=\"item\">\r\n                            </el-option>\r\n                        </el-select>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"主机\" prop=\"host\">\r\n                        <el-input v-model=\"editConnForm.host\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"用户\" prop=\"loginUser\">\r\n                        <el-input v-model=\"editConnForm.loginUser\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"密码\" prop=\"password\">\r\n                        <el-input v-model=\"editConnForm.password\" type=\"password\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item>\r\n                        <el-button type=\"primary\" @click=\"submitUpdateForm('editConnForm')\">更新</el-button>\r\n                    </el-form-item>\r\n                </el-form>\r\n            </el-dialog>\r\n        </div>\r\n\r\n        <div class=\"menu\" v-if=\"isShowMenu\" :style=\"{'left': menuLeft + 'px', 'top': menuTop + 'px'}\">\r\n            <div style=\"width: 10%\">\r\n                <home-menu :conversation=\"curClickConnection\" @hiddenMenu=\"hiddenMenu\" />\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nimport { codemirror } from 'vue-codemirror'\r\n\r\nimport homeMenu from '../components/HomeMenu'\r\nimport { listConns, deleteConn, updateConn, saveConn, listDbs, runSql, listTables, listSupportTypes } from '../api/database'\r\nexport default {\r\n    components: {\r\n        codemirror, homeMenu\r\n    },\r\n    props: ['conversation'],\r\n    created() {\r\n        document.addEventListener('click', () => {\r\n            this.isShowMenu = false\r\n        })\r\n        document.addEventListener('mousedown', (e) => {\r\n            const { button } = e\r\n            if (button === 2) {\r\n                this.isShowMenu = false\r\n            }\r\n        })\r\n    },\r\n    data() {\r\n        return {\r\n            showTableData: [],\r\n            pageSize: 10,\r\n            currentPage: 1,\r\n            //menu\r\n            isShowMenu: false,\r\n            menuTop: 0,\r\n            menuLeft: 0,\r\n            props: {\r\n                label: 'name',\r\n                children: 'tables',\r\n                isLeaf: 'leaf'\r\n            },\r\n            cmOptions: {\r\n                tabSize: 30,\r\n                mode: 'text/x-sql   ',  // 模式\r\n                theme: 'idea',  // 主题\r\n                lineNumbers: true,  // 是否显示行数\r\n                line: true,\r\n                viewportMargin: Infinity,  // 处理高度自适应时搭配使用\r\n                highlightDifferences: true,\r\n                autofocus: false,\r\n                indentUnit: 2,\r\n                smartIndent: true,\r\n                readOnly: false,  // 只读\r\n                showCursorWhenSelecting: true,\r\n                firstLineNumber: 1,\r\n                // 更多配置查询 https://codemirror.net/doc/manual.html#config\r\n\r\n                matchBrackets: true,\r\n                lineMapping: true, //自动换行   \r\n                styleActiveLine: true,\r\n                extraKeys: { // 触发按键\r\n                    'Ctrl': 'autocomplete'\r\n                },\r\n                hintOptions: { // 自定义提示选项\r\n                    completeSingle: false, // 当匹配只有一项的时候是否自动补全\r\n                    tables: {\r\n                        users: ['name', 'score', 'birthDate'],\r\n                        countries: ['name', 'population', 'size'],\r\n                        score: ['zooao']\r\n                    }\r\n                }\r\n            },\r\n            codeSnippets: \"\",\r\n            editableTabsValue: '',\r\n            editableTabs: [],\r\n            tabIndex: 0,\r\n            //联动更新数据\r\n            connections: [],\r\n            curClickConnection: {},\r\n            //当前连接的数据库\r\n            curDbs: [],\r\n            curTables: [],\r\n            //当前sql内容\r\n            sqlContent: '',\r\n            //tabs map key: connId + '-' + dbName, value : tab\r\n            edittableTabsMap: new Map(),\r\n            edittableTabsNameMap: new Map(),\r\n            curClickTab: {},\r\n\r\n            //result\r\n\r\n            //添加连接表单\r\n            addConnDialog: false,\r\n            editConnDialog: false,\r\n            supportTypes: ['MYSQL', 'ORACLE'],\r\n            ruleForm: {\r\n                name: '',\r\n                dbType: '',\r\n                host: '',\r\n                loginUser: '',\r\n                password: ''\r\n            },\r\n            editConnForm: {},\r\n            rules: {\r\n                name: [\r\n                    { required: true, message: '请输入连接名称', trigger: 'blur' },\r\n                    { min: 3, max: 10, message: '长度在 3 到 10 个字符', trigger: 'blur' }\r\n                ],\r\n                dbType: [\r\n                    { required: true, message: '请选择连接类型', trigger: 'change' }\r\n                ],\r\n                host: [\r\n                    { required: true, message: '请填写主机地址', trigger: 'blur' }\r\n                ],\r\n                loginUser: [\r\n                    { required: true, message: '请填写用户名', trigger: 'blur' }\r\n                ],\r\n                password: [\r\n                    { required: true, message: '请填写密码', trigger: 'blur' }\r\n                ]\r\n            }\r\n        }\r\n    },\r\n\r\n    mounted() {\r\n        this.listTypes();\r\n    },\r\n\r\n    methods: {\r\n        //复制\r\n        celldblclick(column, event) {\r\n            let save = function (e) {\r\n                e.clipboardData.setData('text/plain', column.label);\r\n                e.preventDefault();//阻止默认行为\r\n            }\r\n            document.addEventListener('copy', save);\r\n            document.execCommand(\"copy\");\r\n            document.removeEventListener('copy', save);\r\n            this.$message({ message: '复制成功', type: 'success' }) //加提示\r\n        },\r\n\r\n        //\r\n        async listTypes() {\r\n            this.supportTypes = await listSupportTypes()\r\n        },\r\n        handleSizeChange(val) {\r\n            this.pageSize = val;\r\n            this.handleCurrentChange(1)\r\n        },\r\n        handleCurrentChange(val) {\r\n            this.currentPage = val;\r\n            if (!this.curClickTab || !this.curClickTab.tableData) {\r\n                this.showTableData = [];\r\n                return;\r\n            }\r\n            if (this.curClickTab.tableData.length < 1) {\r\n                this.showTableData = [];\r\n                return;\r\n            }\r\n            let skipSize = (val - 1) * this.pageSize;\r\n            this.showTableData = this.curClickTab.tableData.slice(skipSize, skipSize + this.pageSize)\r\n        },\r\n        //点击库\r\n        async dbClick(row) {\r\n            let tables = await listTables(row)\r\n            this.curTables = tables;\r\n        },\r\n        async tableClick(obj) {\r\n            //输入select预览\r\n            let sqlContent = `select * from ${obj.table} limit 10`;\r\n            let tabKey = obj.connId + \"-\" + obj.database;\r\n            let tab = this.edittableTabsMap.get(tabKey)\r\n            if (tab == null) {\r\n                let newTabName = ++this.tabIndex + '';\r\n                tab = {\r\n                    title: obj.connName + \"-\" + obj.database,\r\n                    name: newTabName,\r\n                    sqlContent: sqlContent,\r\n                    database: obj.database,\r\n                    connId: obj.connId,\r\n                    tableData: [],\r\n                    tableMeta: []\r\n                }\r\n                this.editableTabs.push(tab);\r\n                this.edittableTabsMap.set(tabKey, tab)\r\n                this.edittableTabsNameMap.set(newTabName, tab)\r\n                this.editableTabsValue = newTabName;\r\n            } else {\r\n                //切换tab\r\n                tab.sqlContent = sqlContent\r\n                this.editableTabsValue = tab.name;\r\n            }\r\n            this.curClickTab = tab;\r\n            this.doQuery(sqlContent, tab)\r\n        },\r\n        handleOpen(key) {\r\n            if (key == 1) {\r\n                this.queryConns()\r\n            }\r\n        },\r\n        //运行sql\r\n        async executeSql(sql, connId, database) {\r\n            const params = {\r\n                sql: sql,\r\n                connId: connId,\r\n                database: database\r\n            }\r\n            const result = await runSql(params);\r\n            return result;\r\n        },\r\n        //获取数据库\r\n        async listDbs(id) {\r\n            const rest = await listDbs(id)\r\n            return rest;\r\n        },\r\n        //获取所有连接\r\n        async queryConns() {\r\n            const rest = await listConns()\r\n            this.connections = rest\r\n        },\r\n        //删除连接\r\n        async deletConn(id) {\r\n            const res = await deleteConn(id)\r\n            this.queryConns()\r\n        },\r\n        //编辑连接\r\n        async editUpdateConn(data) {\r\n            const rest = await updateConn(data)\r\n            this.queryConns()\r\n            this.editConnDialog = false\r\n        },\r\n        //新建连接\r\n        async saveConn(data) {\r\n            const rest = await saveConn(data)\r\n            this.queryConns()\r\n            this.addConnDialog = false\r\n        },\r\n        //new\r\n        async refreshDb(id) {\r\n            //获取连接数据库\r\n            const rest = await this.listDbs(id)\r\n\r\n            this.curDbs = rest\r\n        },\r\n        //移除tab\r\n        removeTab(targetName) {\r\n            let tabs = this.editableTabs;\r\n            let activeName = this.editableTabsValue;\r\n            if (activeName === targetName) {\r\n                tabs.forEach((tab, index) => {\r\n                    if (tab.name === targetName) {\r\n                        let nextTab = tabs[index + 1] || tabs[index - 1];\r\n                        if (nextTab) {\r\n                            activeName = nextTab.name;\r\n                            this.curClickTab = nextTab\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            this.editableTabsValue = activeName;\r\n            let key = null\r\n            this.editableTabs = tabs.filter(tab => {\r\n                let flag = tab.name !== targetName\r\n                if (!flag) {\r\n                    key = tab.connId + \"-\" + tab.database;\r\n                }\r\n                return flag;\r\n            });\r\n            if (key !== null) {\r\n                this.edittableTabsMap.delete(key)\r\n            }\r\n            this.edittableTabsNameMap.delete(targetName)\r\n        },\r\n        clickTab(tab) {\r\n            let tabObj = this.edittableTabsNameMap.get(tab.name)\r\n            if (tabObj !== null) {\r\n                this.curClickTab = tabObj;\r\n            }\r\n        },\r\n        //节点点击\r\n        dbNodeClick(obj) {\r\n            if (obj.leaf === true) {\r\n                //输入select预览\r\n                let sqlContent = `select * from ${obj.name} limit 10`;\r\n\r\n                let tabKey = obj.connId + \"-\" + obj.database;\r\n                let tab = this.edittableTabsMap.get(tabKey)\r\n                if (tab == null) {\r\n                    let newTabName = ++this.tabIndex + '';\r\n                    tab = {\r\n                        title: obj.connName + \"-\" + obj.database,\r\n                        name: newTabName,\r\n                        sqlContent: sqlContent,\r\n                        database: obj.database,\r\n                        connId: obj.connId,\r\n                        tableData: [],\r\n                        tableMeta: []\r\n                    }\r\n                    this.editableTabs.push(tab);\r\n                    this.edittableTabsMap.set(tabKey, tab)\r\n                    this.edittableTabsNameMap.set(newTabName, tab)\r\n                    this.editableTabsValue = newTabName;\r\n                } else {\r\n                    //切换tab\r\n                    tab.sqlContent = sqlContent\r\n                    this.editableTabsValue = tab.name;\r\n                }\r\n                this.curClickTab = tab;\r\n                this.doQuery(sqlContent, tab)\r\n                return;\r\n            }\r\n        },\r\n        //运行sql\r\n        runSql() {\r\n            this.doQuery(this.curClickTab.sqlContent, this.curClickTab)\r\n        },\r\n        checkRunSql() {\r\n            this.doQuery(window.getSelection().toString(), this.curClickTab)\r\n        },\r\n        async doQuery(sql, tab) {\r\n            const result = await this.executeSql(sql, tab.connId, tab.database)\r\n            //query\r\n            tab.tableMeta = result.tableMeta\r\n            tab.tableData = result.tableData\r\n            this.handleCurrentChange(1)\r\n        },\r\n\r\n        //添加连接相关\r\n        submitForm(formName) {\r\n            this.$refs[formName].validate((valid) => {\r\n                if (valid) {\r\n                    this.saveConn(this.ruleForm)\r\n                }\r\n            });\r\n        },\r\n        resetForm(formName) {\r\n            this.$refs[formName].resetFields();\r\n        },\r\n\r\n        //menu\r\n        showMenu(data) {\r\n            this.isShowMenu = true\r\n            this.menuLeft = data.pageX\r\n            this.menuTop = data.pageY\r\n            this.curClickConnection = data\r\n        },\r\n        hiddenMenu(data, op) {\r\n            if (op === 'edit') {\r\n                this.editConnForm = data;\r\n                this.editConnDialog = true;\r\n            } else if (op === 'remove') {\r\n                this.deletConn(data.id)\r\n            }\r\n\r\n            this.isShowMenu = false\r\n        },\r\n        submitUpdateForm(formName) {\r\n            this.$refs[formName].validate((valid) => {\r\n                if (valid) {\r\n                    this.editUpdateConn(this.editConnForm)\r\n                }\r\n            });\r\n        },\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.container div {\r\n    margin-bottom: 20px;\r\n    margin-top: 10px;\r\n}\r\n\r\n.el-header {\r\n    background-color: #B3C0D1;\r\n    color: #333;\r\n    line-height: 60px;\r\n}\r\n\r\n.el-aside {\r\n    color: #333;\r\n}\r\n\r\n.CodeMirror {\r\n    border: 1px solid #eee;\r\n    height: auto;\r\n    /* 编辑器盒子高度自适应 */\r\n    width: 30%;\r\n}\r\n\r\n\r\n.conversation-info {\r\n    height: 60px;\r\n    padding: 0 10px 0;\r\n    background-color: #e6e6e6;\r\n}\r\n\r\n.conversation-info .active {\r\n    height: 60px;\r\n    padding: 0 10px 0;\r\n    background-color: #cfcfcf;\r\n}\r\n\r\n.conversation-info:hover {\r\n    height: 60px;\r\n    padding: 0 10px 0;\r\n    background-color: #cfcfcf;\r\n}\r\n\r\n.conversation-info .menu {\r\n    position: fixed;\r\n    z-index: 1004;\r\n    background-color: #fff;\r\n    border-radius: 5px;\r\n}\r\n\r\n.conversation-info .wrapper {\r\n    display: flex;\r\n    height: 60px;\r\n    padding: 0 5px;\r\n    align-items: center;\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n}\r\n\r\n.el-badge {\r\n    top: 4px;\r\n    overflow: visible;\r\n}\r\n\r\n.conversation-avatar {\r\n    width: 40px;\r\n    height: 40px;\r\n}\r\n\r\n.conversation-detail {\r\n    margin-left: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n}\r\n\r\n.top-item {\r\n    height: 20px;\r\n    width: 260px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n}\r\n\r\n.bottom-item {\r\n    height: 14px;\r\n    margin-top: 6px;\r\n    font-size: 12px;\r\n    color: #968b8b;\r\n    width: 200px;\r\n}\r\n\r\n.conversation-message {\r\n    float: left;\r\n}\r\n\r\n.ellipsis {\r\n    display: inline-block;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n}\r\n</style>\r\n  \n\n\n// WEBPACK FOOTER //\n// src/view/Database.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',[_c('el-header',{staticStyle:{\"text-align\":\"left\",\"font-size\":\"12px\",\"background-color\":\"white\"}},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.addConnDialog = true}}},[_vm._v(\"\\n                新建查询\\n            \")])],1),_vm._v(\" \"),_c('el-container',{staticStyle:{\"border\":\"1px solid #eee\"}},[_c('el-aside',{staticStyle:{\"background-color\":\"rgb(238, 241, 246)\"},attrs:{\"width\":\"200px\"}},[_c('el-menu',{staticStyle:{\"background-color\":\"rgb(238, 241, 246)\"},on:{\"open\":_vm.handleOpen}},[_c('el-submenu',{attrs:{\"index\":\"1\"}},[_c('template',{slot:\"title\"},[_c('span',[_vm._v(\"我的连接\")])]),_vm._v(\" \"),_vm._l((_vm.connections),function(data){return _c('div',{key:data.id},[_c('div',{on:{\"contextmenu\":function($event){$event.preventDefault();$event.stopPropagation();return _vm.showMenu(data)}}},[_c('el-menu-item',{attrs:{\"index\":data.name},on:{\"click\":function($event){return _vm.refreshDb(data.id)}}},[_vm._v(\"\\n                                    \"+_vm._s(data.name)+\"\\n                                \")])],1)])})],2)],1)],1),_vm._v(\" \"),_c('el-aside',{attrs:{\"width\":\"300px\"}},[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.curDbs,\"border\":\"\"},on:{\"cell-click\":_vm.dbClick}},[_c('el-table-column',{attrs:{\"prop\":\"database\",\"label\":\"库\"}})],1)],1),_vm._v(\" \"),_c('el-aside',[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.curTables,\"border\":\"\"},on:{\"cell-click\":_vm.tableClick}},[_c('el-table-column',{attrs:{\"prop\":\"table\",\"label\":\"表\"}})],1)],1),_vm._v(\" \"),(_vm.editableTabs.length > 0)?_c('el-container',[_c('el-header',{staticStyle:{\"text-align\":\"left\",\"font-size\":\"12px\"}},[_c('el-button',{on:{\"click\":_vm.runSql}},[_vm._v(\"运行\")]),_vm._v(\" \"),_c('el-button',{on:{\"click\":_vm.checkRunSql}},[_vm._v(\"选中运行\")])],1),_vm._v(\" \"),_c('el-main',[_c('el-tabs',{attrs:{\"type\":\"card\",\"closable\":\"\"},on:{\"tab-remove\":_vm.removeTab,\"tab-click\":_vm.clickTab},model:{value:(_vm.editableTabsValue),callback:function ($$v) {_vm.editableTabsValue=$$v},expression:\"editableTabsValue\"}},[_vm._l((_vm.editableTabs),function(item,index){return _c('el-tab-pane',{key:item.name,attrs:{\"label\":item.title,\"name\":item.name}})}),_vm._v(\" \"),_c('codemirror',{attrs:{\"options\":_vm.cmOptions},model:{value:(_vm.curClickTab.sqlContent),callback:function ($$v) {_vm.$set(_vm.curClickTab, \"sqlContent\", $$v)},expression:\"curClickTab.sqlContent\"}})],2),_vm._v(\" \"),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.showTableData},on:{\"header-click\":_vm.celldblclick}},_vm._l((_vm.curClickTab.tableMeta),function(item){return _c('el-table-column',{key:item.label,attrs:{\"prop\":item.label,\"label\":item.label,\"width\":\"180\"}})}),1),_vm._v(\" \"),_c('el-pagination',{attrs:{\"current-page\":_vm.currentPage,\"page-sizes\":[10, 20, 100, 200, 300, 400],\"page-size\":_vm.pageSize,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.curClickTab.tableData.length},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}})],1)],1):_vm._e()],1)],1),_vm._v(\" \"),_c('div',[_c('el-dialog',{attrs:{\"title\":\"添加连接\",\"visible\":_vm.addConnDialog},on:{\"update:visible\":function($event){_vm.addConnDialog=$event}}},[_c('el-form',{ref:\"ruleForm\",staticClass:\"demo-ruleForm\",attrs:{\"model\":_vm.ruleForm,\"rules\":_vm.rules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"连接名称\",\"prop\":\"name\"}},[_c('el-input',{model:{value:(_vm.ruleForm.name),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"name\", $$v)},expression:\"ruleForm.name\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"连接类型\",\"prop\":\"dbType\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择连接类型\"},model:{value:(_vm.ruleForm.dbType),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"dbType\", $$v)},expression:\"ruleForm.dbType\"}},_vm._l((_vm.supportTypes),function(item){return _c('el-option',{key:item,attrs:{\"label\":item,\"value\":item}})}),1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"主机\",\"prop\":\"host\"}},[_c('el-input',{model:{value:(_vm.ruleForm.host),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"host\", $$v)},expression:\"ruleForm.host\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"用户\",\"prop\":\"loginUser\"}},[_c('el-input',{model:{value:(_vm.ruleForm.loginUser),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"loginUser\", $$v)},expression:\"ruleForm.loginUser\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"密码\",\"prop\":\"password\"}},[_c('el-input',{attrs:{\"type\":\"password\"},model:{value:(_vm.ruleForm.password),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"password\", $$v)},expression:\"ruleForm.password\"}})],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.submitForm('ruleForm')}}},[_vm._v(\"立即创建\")]),_vm._v(\" \"),_c('el-button',{on:{\"click\":function($event){return _vm.resetForm('ruleForm')}}},[_vm._v(\"重置\")])],1)],1)],1)],1),_vm._v(\" \"),_c('div',[_c('el-dialog',{attrs:{\"title\":\"编辑连接\",\"visible\":_vm.editConnDialog},on:{\"update:visible\":function($event){_vm.editConnDialog=$event}}},[_c('el-form',{ref:\"editConnForm\",staticClass:\"demo-ruleForm\",attrs:{\"model\":_vm.editConnForm,\"rules\":_vm.rules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"连接名称\",\"prop\":\"name\"}},[_c('el-input',{model:{value:(_vm.editConnForm.name),callback:function ($$v) {_vm.$set(_vm.editConnForm, \"name\", $$v)},expression:\"editConnForm.name\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"连接类型\",\"prop\":\"dbType\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择连接类型\"},model:{value:(_vm.editConnForm.dbType),callback:function ($$v) {_vm.$set(_vm.editConnForm, \"dbType\", $$v)},expression:\"editConnForm.dbType\"}},_vm._l((_vm.supportTypes),function(item){return _c('el-option',{key:item,attrs:{\"label\":item,\"value\":item}})}),1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"主机\",\"prop\":\"host\"}},[_c('el-input',{model:{value:(_vm.editConnForm.host),callback:function ($$v) {_vm.$set(_vm.editConnForm, \"host\", $$v)},expression:\"editConnForm.host\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"用户\",\"prop\":\"loginUser\"}},[_c('el-input',{model:{value:(_vm.editConnForm.loginUser),callback:function ($$v) {_vm.$set(_vm.editConnForm, \"loginUser\", $$v)},expression:\"editConnForm.loginUser\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"密码\",\"prop\":\"password\"}},[_c('el-input',{attrs:{\"type\":\"password\"},model:{value:(_vm.editConnForm.password),callback:function ($$v) {_vm.$set(_vm.editConnForm, \"password\", $$v)},expression:\"editConnForm.password\"}})],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.submitUpdateForm('editConnForm')}}},[_vm._v(\"更新\")])],1)],1)],1)],1),_vm._v(\" \"),(_vm.isShowMenu)?_c('div',{staticClass:\"menu\",style:({'left': _vm.menuLeft + 'px', 'top': _vm.menuTop + 'px'})},[_c('div',{staticStyle:{\"width\":\"10%\"}},[_c('home-menu',{attrs:{\"conversation\":_vm.curClickConnection},on:{\"hiddenMenu\":_vm.hiddenMenu}})],1)]):_vm._e()])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-139705ce\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/view/Database.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-139705ce\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Database.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Database.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Database.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-139705ce\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Database.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-139705ce\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/view/Database.vue\n// module id = null\n// module chunks = ","import Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport Database from '@/view/Database'\r\n\r\n\r\n\r\n\r\nVue.use(Router)\r\n\r\nexport default new Router({\r\n  routes: [\r\n    {\r\n      path: '/',\r\n      name: 'database',\r\n      component: Database,\r\n      meta: {\r\n        requiredAuth: false\r\n      }\r\n    }\r\n  ]\r\n})\r\n    \n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","// The Vue build version to load with the `import` command\r\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\r\nimport Vue from 'vue'\r\nimport App from './App'\r\nimport router from './router'\r\nimport ElementUI from 'element-ui';\r\nimport 'element-ui/lib/theme-chalk/index.css';\r\nimport AxiosConfig from './config/axiosConfig'\r\n\r\n// 全局引入vue-codemirror\r\nimport { codemirror } from 'vue-codemirror'\r\nimport 'vue-codemirror/node_modules/codemirror/lib/codemirror.css'\r\n// theme\r\nimport 'vue-codemirror/node_modules/codemirror/theme/idea.css'\r\n\r\n// addon\r\nimport 'vue-codemirror/node_modules/codemirror/addon/lint/lint.css'\r\nimport 'vue-codemirror/node_modules/codemirror/addon/fold/foldgutter.css'\r\n\r\nimport 'vue-codemirror/node_modules/codemirror/addon/hint/show-hint.css'\r\nimport 'vue-codemirror/node_modules/codemirror/addon/hint/show-hint.js'\r\nimport 'vue-codemirror/node_modules/codemirror/addon/hint/sql-hint.js'\r\n\r\n// lint\r\nimport 'vue-codemirror/node_modules/codemirror/addon/lint/lint.js'\r\nimport 'vue-codemirror/node_modules/codemirror/addon/lint/json-lint.js'\r\n\r\n// mode\r\nimport 'vue-codemirror/node_modules/codemirror/mode/xml/xml.js'\r\nimport 'vue-codemirror/node_modules/codemirror/mode/javascript/javascript'\r\nimport 'vue-codemirror/node_modules/codemirror/mode/htmlmixed/htmlmixed.js'\r\nimport 'vue-codemirror/node_modules/codemirror/mode/sql/sql.js'\r\n\r\n//括号匹配\r\nimport 'vue-codemirror/node_modules/codemirror/addon/edit/matchbrackets.js'\r\n\r\n\r\n\r\n// merge\r\nimport 'vue-codemirror/node_modules/codemirror/addon/merge/merge.js'\r\nimport 'vue-codemirror/node_modules/codemirror/addon/merge/merge.css'\r\n\r\n// fold\r\nimport 'vue-codemirror/node_modules/codemirror/addon/fold/foldcode.js'\r\nimport 'vue-codemirror/node_modules/codemirror/addon/fold/foldgutter.js'\r\nimport 'vue-codemirror/node_modules/codemirror/addon/fold/xml-fold.js'\r\n\r\nimport 'vue-codemirror/node_modules/codemirror/addon/edit/closebrackets.js'\r\n\r\nwindow.jsonlint = require(\"vue-codemirror/node_modules/codemirror/addon/lint/json-lint.js\");\r\n\r\nimport { Loading } from 'element-ui';\r\n\r\nVue.use(codemirror)\r\n\r\nVue.prototype.$axios = AxiosConfig.axiosService\r\nVue.prototype.$loading = Loading\r\nVue.use(ElementUI);\r\n\r\n// 路由拦截器\r\n// router.beforeEach((to, from, next) => {\r\n//   if (to.matched.length != 0) {\r\n//     if (to.meta.requiredAuth) { // 判断该路由是否需要登录权限\r\n//       if (Boolean(localStorage.getItem(\"token\"))) { // 通过vuex state获取当前的user是否存在\r\n//         next();\r\n//       } else {\r\n//         ElementUI.Message.error('您还未登陆，您还未登陆请先登录')\r\n//         next({\r\n//           path: '/'\r\n//         })\r\n//       }\r\n//     } else {\r\n//       next();\r\n//     }\r\n//   } else {\r\n//     next({\r\n//       path: '/',\r\n//     })\r\n//   }\r\n// })\r\n/* eslint-disable no-new */\r\nnew Vue({\r\n  el: '#app',\r\n  render: h => h(App),\r\n  router,\r\n  components: { App },\r\n  template: '<App/>'\r\n})\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}