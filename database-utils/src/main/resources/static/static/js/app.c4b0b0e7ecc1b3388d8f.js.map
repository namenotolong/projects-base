{"version":3,"sources":["webpack:///./src/App.vue?861b","webpack:///./src/App.vue","webpack:///src/App.vue","webpack:///./src/utils/utils.js","webpack:///./src/config/axiosConfig.js","webpack:///./src/api/database.js","webpack:///src/view/Database.vue","webpack:///./src/view/Database.vue?e560","webpack:///./src/view/Database.vue","webpack:///./src/router/index.js","webpack:///./src/main.js"],"names":["selectortype_template_index_0_src_App","render","_h","this","$createElement","_c","_self","attrs","id","staticRenderFns","src_App","__webpack_require__","normalizeComponent","name","CryptoJS","enc","Utf8","parse","axiosConfig","AxiosConfig","_this","classCallCheck_default","axiosService","axios","create","baseURL","addInterceptor","getRequest","url","get","loading","interceptors","request","use","config","Vue","prototype","$loading","lock","text","spinner","background","authorization","localStorage","getItem","headers","err","promise_default","a","reject","response","close","data","success","console","log","Message","error","message","code","window","removeItem","router","push","path","resolve","http","runSql","params","post","Database","components","codemirror","vue_codemirror","props","created","tableDetailDiaglog","tableDetail","showLeft","label","children","isLeaf","cmOptions","tabSize","mode","theme","lineNumbers","line","viewportMargin","Infinity","highlightDifferences","autofocus","indentUnit","smartIndent","readOnly","showCursorWhenSelecting","firstLineNumber","matchBrackets","lineMapping","styleActiveLine","extraKeys","Ctrl","hintOptions","completeSingle","tables","users","countries","score","codeSnippets","editableTabsValue","editableTabs","tabIndex","connections","curClickConnection","curDbs","curTables","sqlContent","edittableTabsMap","map_default","edittableTabsNameMap","curClickTab","addConnDialog","editConnDialog","supportTypes","ruleForm","dbType","host","loginUser","password","editConnForm","rules","required","trigger","min","max","destroyed","onbeforeunload","mounted","listTypes","e","event","returnValue","methods","handleTableCommand","command","asyncToGenerator_default","regenerator_default","mark","_callee","result","wrap","_context","prev","next","connId","database","table","sent","columnList","length","$message","type","stop","handleCommand","_this2","$confirm","then","_","deletConn","catch","celldblclick","column","save","clipboardData","setData","preventDefault","document","addEventListener","execCommand","removeEventListener","_this3","_callee2","_context2","handleSizeChange","val","pageSize","handleCurrentChange","currentPage","tableData","showTableData","skipSize","slice","dbClick","row","_this4","_callee3","_context3","tableClick","obj","_this5","_callee4","newTabName","tabKey","tab","_context4","title","tableMeta","errorMsg","set","doQuery","handleOpen","key","queryConns","executeSql","sql","_this6","_callee5","_context5","abrupt","listDbs","_this7","_callee6","rest","_context6","_this8","_callee7","_context7","listConns","_this9","_callee8","_context8","delete","editUpdateConn","_this10","_callee9","_context9","saveConn","_this11","_callee10","_context10","refreshDb","_this12","_callee11","_context11","removeTab","targetName","_this13","tabs","activeName","forEach","index","nextTab","filter","flag","clickTab","tabObj","checkRunSql","getSelection","toString","_this14","_callee12","_context12","submitForm","formName","_this15","$refs","validate","valid","resetForm","resetFields","submitUpdateForm","_this16","view_Database","_vm","staticStyle","text-align","font-size","background-color","on","click","$event","_v","border","width","open","slot","_l","placement","_s","_e","cell-click","prop","scopedSlots","_u","fn","scope","closable","tab-remove","tab-click","model","value","callback","$$v","expression","item","options","$set","header-click","current-page","page-sizes","page-size","layout","total","size-change","current-change","visible","update:visible","ref","staticClass","label-width","placeholder","indexList","src_view_Database","Database_normalizeComponent","ssrContext","Router","routes","component","meta","requiredAuth","allowBack","jsonlint","require","$axios","Loading","ElementUI","el","h","App","template"],"mappings":"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","file":"static/js/app.c4b0b0e7ecc1b3388d8f.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('router-view')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-51952100\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-51952100\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","<template>\r\n\r\n  <div id=\"app\">\r\n    <router-view/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  name: 'App',\r\n}\r\n</script>\r\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","import CryptoJS from 'crypto-js'\r\nconst KEY = CryptoJS.enc.Utf8.parse(\"1234567890123456\");\r\nconst IV = CryptoJS.enc.Utf8.parse('1234567890123456');\r\n/**\r\n * 时间戳\r\n * @param {*} timestamp  时间戳\r\n */\r\nconst timestampToTime = (timestamp) => {\r\n  let date = new Date(timestamp) // 时间戳为10位需*1000，时间戳为13位的话不需乘1000\r\n  let Y = date.getFullYear() + '-'\r\n  let M =\r\n        (date.getMonth() + 1 < 10\r\n          ? '0' + (date.getMonth() + 1)\r\n          : date.getMonth() + 1) + '-'\r\n  let D =\r\n        (date.getDate() < 10 ? '0' + date.getDate() : date.getDate()) + ' '\r\n  let h =\r\n        (date.getHours() < 10 ? '0' + date.getHours() : date.getHours()) + ':'\r\n  let m =\r\n        (date.getMinutes() < 10 ? '0' + date.getMinutes() : date.getMinutes()) +\r\n        ':'\r\n  let s =\r\n        date.getSeconds() < 10 ? '0' + date.getSeconds() : date.getSeconds()\r\n  return Y + M + D + h + m + s\r\n}\r\n/**\r\n * 存储localStorage\r\n */\r\nconst setStore = (name, content) => {\r\n  if (!name) return\r\n  if (typeof content !== 'string') {\r\n    content = JSON.stringify(content)\r\n  }\r\n  window.localStorage.setItem(name, content)\r\n}\r\n\r\n/**\r\n * 获取localStorage\r\n */\r\nconst getStore = name => {\r\n  if (!name) return\r\n  return window.localStorage.getItem(name)\r\n}\r\n\r\n/**\r\n * 删除localStorage\r\n */\r\nconst removeStore = name => {\r\n  if (!name) return\r\n  window.localStorage.removeItem(name)\r\n}\r\n\r\n/**\r\n * 设置cookie\r\n **/\r\nfunction setCookie (name, value, day) {\r\n  let date = new Date()\r\n  date.setDate(date.getDate() + day)\r\n  document.cookie = name + '=' + value + ';expires=' + date\r\n};\r\n\r\n/**\r\n * 获取cookie\r\n **/\r\nfunction getCookie (name) {\r\n  let reg = RegExp(name + '=([^;]+)')\r\n  let arr = document.cookie.match(reg)\r\n  if (arr) {\r\n    return arr[1]\r\n  } else {\r\n    return ''\r\n  }\r\n};\r\n\r\n/**\r\n * 删除cookie\r\n **/\r\nfunction delCookie (name) {\r\n  setCookie(name, null, -1)\r\n};\r\n\r\n/**\r\n * aes加密\r\n * @param word\r\n * @param keyStr\r\n * @param ivStr\r\n * @returns {*|string}\r\n * @constructor\r\n */\r\nexport function encrypt(word, keyStr, ivStr) {\r\n  let key = KEY\r\n  let iv = IV\r\n\r\n  if (keyStr) {\r\n    key = CryptoJS.enc.Utf8.parse(keyStr);\r\n    iv = CryptoJS.enc.Utf8.parse(ivStr);\r\n  }\r\n\r\n  let srcs = CryptoJS.enc.Utf8.parse(word);\r\n  var encrypted = CryptoJS.AES.encrypt(srcs, key, {\r\n    iv: iv,\r\n    mode: CryptoJS.mode.CBC,\r\n    padding: CryptoJS.pad.ZeroPadding\r\n  });\r\n  // console.log(\"-=-=-=-\", encrypted.ciphertext)\r\n  return CryptoJS.enc.Base64.stringify(encrypted.ciphertext);\r\n\r\n}\r\n/**\r\n * AES 解密 ：字符串 key iv  返回base64\r\n *\r\n */\r\nexport function decrypt(word, keyStr, ivStr) {\r\n  let key  = KEY\r\n  let iv = IV\r\n\r\n  if (keyStr) {\r\n    key = CryptoJS.enc.Utf8.parse(keyStr);\r\n    iv = CryptoJS.enc.Utf8.parse(ivStr);\r\n  }\r\n\r\n  let base64 = CryptoJS.enc.Base64.parse(word);\r\n  let src = CryptoJS.enc.Base64.stringify(base64);\r\n\r\n  var decrypt = CryptoJS.AES.decrypt(src, key, {\r\n    iv: iv,\r\n    mode: CryptoJS.mode.CBC,\r\n    padding: CryptoJS.pad.ZeroPadding\r\n  });\r\n  var decryptedStr = decrypt.toString(CryptoJS.enc.Utf8);\r\n  return decryptedStr.toString();\r\n}\r\n\r\n/**\r\n * 将对象转化为get请求的url\r\n * @param {} obj\r\n */\r\nexport function converObjToUrl(obj) {\r\n  if(obj) {\r\n    let str = '?';\r\n    for (const key in obj) {\r\n      if (obj.hasOwnProperty(key)) {\r\n        const element = obj[key];\r\n        str += key + '=' + element + '&'\r\n      }\r\n    }\r\n    return str;\r\n  }\r\n}\r\n/**\r\n * 清除输入框内容\r\n * @param {} obj\r\n */\r\nexport function clearInput(obj) {\r\n  for (const key in obj) {\r\n    if (obj.hasOwnProperty(key)) {\r\n      obj[key] = '';\r\n    }\r\n  }\r\n}\r\n\r\nexport const baseURL = \"http://zhsdsb.top:8081\";\r\n/**\r\n * 导出\r\n **/\r\nexport {\r\n  timestampToTime,\r\n  setStore,\r\n  getStore,\r\n  removeStore,\r\n  setCookie,\r\n  getCookie,\r\n  delCookie,\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/utils.js","import { Message } from 'element-ui'\r\nimport { removeStore } from '../utils/utils'\r\nimport router from '../router';\r\nimport axios from 'axios';\r\nimport Vue from 'vue';\r\nclass AxiosConfig {\r\n  constructor() {\r\n    this.axiosService = axios.create({\r\n      baseURL: 'http://localhost:8083'\r\n    })\r\n    this.addInterceptor()\r\n    this.axiosService.getRequest = (url) => this.axiosService.get(url)\r\n  }\r\n  addInterceptor() {\r\n    let loading = null;\r\n    this.axiosService.interceptors.request.use(config => {\r\n      loading = Vue.prototype.$loading({\r\n        lock: true,\r\n        text: 'Loading',\r\n        spinner: 'el-icon-loading',\r\n        background: 'rgba(0, 0, 0, 0.7)'\r\n      });\r\n      let authorization = localStorage.getItem(\"token\")\r\n      if (authorization) {\r\n        config.headers.authorization = authorization\r\n      }\r\n      return config\r\n    }, err => {\r\n      return Promise.reject(err)\r\n    })\r\n    this.axiosService.interceptors.response.use(response => {\r\n      if (loading != null) {\r\n        loading.close();\r\n      }\r\n      if (!response.data.success && typeof response.data.success != 'undefined') {\r\n        console.log(response)\r\n        Message.error({ message: response.data.message })\r\n        //身份认证异常\r\n        if (response.data.code === 333) {\r\n          removeStore(\"token\")\r\n          router.push({ path: '/' })\r\n        }\r\n        //继续传播\r\n        if (response.data.code === 334) {\r\n          Promise.resolve(response);\r\n        }\r\n        return Promise.reject(response.data.message);\r\n      }\r\n      return response.data.data\r\n    }, err => {\r\n      Message.error({ message: err })\r\n      return Promise.reject(err)\r\n    })\r\n  }\r\n}\r\nexport default new AxiosConfig()\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/config/axiosConfig.js","import AxiosConfig from '../config/axiosConfig'\r\n\r\nlet http = AxiosConfig.axiosService\r\n\r\nexport const listConns = params => http.get('/database/list-conns', params)\r\n\r\n// export const listConns = params => {\r\n//     return [{ name: \"test\", \"id\": 1 }];\r\n// }\r\n\r\nexport const deleteConn = params => http.delete('/database/delete-conn/' + params)\r\n\r\nexport const updateConn = params => http.post('/database/update-conn', params)\r\n\r\nexport const saveConn = params => http.post('/database/save-conn', params)\r\n\r\nexport const listDbs = params => {\r\n    // console.log(params)\r\n    // return [{\r\n    //     name: 'test', type: 'database', connId: '1', database: 'test', leaf: 'false', tables: [\r\n    //         {\r\n    //             name: 'table1', type: 'table', connId: '1', database: 'test', leaf: 'true', connName: 'test'\r\n    //         }\r\n    //     ]\r\n    // },\r\n    // { name: 'test2', type: 'database', connId: '2', database: 'test2' }];\r\n    return http.get('/database/list-dbs/' + params)\r\n}\r\n\r\nexport const listTables = params => {\r\n    return http.get('/database/list-tables/' + params.connId + '/' + params.database)\r\n}\r\n\r\nexport const tableDetail = params => {\r\n    return http.get('/database/detail-table/' + params.connId + '/' + params.database + '/' + params.table)\r\n}\r\n\r\nexport const listSupportTypes = () => {\r\n    return http.get('/database/list-types')\r\n}\r\n\r\nexport const runSql = params => {\r\n    // console.log(params)\r\n    // return {\r\n    //     tableData: [{\r\n    //         date: '2016-05-02',\r\n    //         name: '王小虎',\r\n    //         address: '上海市普陀区金沙江路 1518 弄'\r\n    //     }, {\r\n    //         date: '2016-05-04',\r\n    //         name: '王小虎',\r\n    //         address: '上海市普陀区金沙江路 1517 弄'\r\n    //     }, {\r\n    //         date: '2016-05-01',\r\n    //         name: '王小虎',\r\n    //         address: '上海市普陀区金沙江路 1519 弄'\r\n    //     }, {\r\n    //         date: '2016-05-03',\r\n    //         name: '王小虎',\r\n    //         address: '上海市普陀区金沙江路 1516 弄'\r\n    //     }],\r\n    //     tableMeta: [{ name: \"date\", label: \"时间\" }, { name: \"name\", label: \"名称\" }, { name: \"address\", label: \"地址\" }]\r\n    // }\r\n    return http.post('/database/run-sql', params)\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/api/database.js","<template>\r\n    <div id=\"app\">\r\n        <div>\r\n            <el-header style=\"text-align: left; font-size: 12px; background-color: white;\">\r\n                <el-button type=\"primary\" @click=\"addConnDialog = true\">\r\n                    新建查询\r\n                </el-button>\r\n            </el-header>\r\n            <div>\r\n                <el-container style=\" border: 1px solid #eee\">\r\n                    <el-aside v-if=\"showLeft\" width=\"10%\" style=\"background-color: rgb(238, 241, 246)\">\r\n\r\n                        <el-menu style=\"background-color: rgb(238, 241, 246)\" @open=\"handleOpen\">\r\n                            <el-submenu index=\"1\">\r\n                                <template slot=\"title\">\r\n                                    <span>我的连接</span>\r\n                                </template>\r\n                                <div v-for=\"data in connections\" :key=\"data.id\">\r\n                                    <el-dropdown style=\"width: 100%;\" @command=\"handleCommand($event, data)\" placement=\"bottom\">\r\n                                        <el-menu-item :index=\"data.name\" @click=\"refreshDb(data.id)\">\r\n                                            {{data.name}}\r\n                                        </el-menu-item>\r\n                                        <el-dropdown-menu slot=\"dropdown\">\r\n                                            <el-dropdown-item command=\"edit\">编辑</el-dropdown-item>\r\n                                            <el-dropdown-item command=\"delete\">删除</el-dropdown-item>\r\n                                        </el-dropdown-menu>\r\n                                    </el-dropdown>\r\n                                </div>\r\n                            </el-submenu>\r\n                        </el-menu>\r\n                    </el-aside>\r\n                    <el-aside v-if=\"showLeft\" width=\"10%\">\r\n                        <el-table :data=\"curDbs\" border style=\"width: 100%\" @cell-click=\"dbClick\">\r\n                            <el-table-column prop=\"database\" label=\"库\">\r\n                            </el-table-column>\r\n                        </el-table>\r\n                        <!-- <el-tree v-if=\"curDbTables.length > 0\" @node-click=\"dbNodeClick\" :props=\"props\" :data=\"curDbTables\">\r\n                    </el-tree> -->\r\n                    </el-aside>\r\n                    <el-aside v-if=\"showLeft\" width=\"15%\">\r\n                        <el-table :data=\"curTables\" border style=\"width: 100%\" @cell-click=\"tableClick\">\r\n                            <el-table-column label=\"表\">\r\n                                <template slot-scope=\"scope\">\r\n                                    <el-dropdown style=\"width: 100%;\" @command=\"handleTableCommand($event, scope.row)\" placement=\"bottom-start\">\r\n                                        <span style=\"width: 100%;\">{{ scope.row.table }}</span>\r\n                                        <el-dropdown-menu slot=\"dropdown\">\r\n                                            <el-dropdown-item command=\"desc\">查看结构</el-dropdown-item>\r\n                                        </el-dropdown-menu>\r\n                                    </el-dropdown>\r\n                                </template>\r\n                            </el-table-column>\r\n                        </el-table>\r\n                    </el-aside>\r\n                    <el-container v-if=\"editableTabs.length > 0\">\r\n                        <el-header style=\"text-align: left; font-size: 12px;\">\r\n                            <el-button @click=\"runSql\">运行</el-button>\r\n                            <el-button @click=\"checkRunSql\">选中运行</el-button>\r\n                            <el-button v-if=\"showLeft\" @click=\"showLeft = false\">收起侧边</el-button>\r\n                            <el-button v-if=\"!showLeft\" @click=\"showLeft = true\">打开侧边</el-button>\r\n                        </el-header>\r\n                        <el-main>\r\n                            <el-tabs v-model=\"editableTabsValue\" type=\"card\" closable @tab-remove=\"removeTab\"\r\n                                @tab-click=\"clickTab\">\r\n                                <el-tab-pane :key=\"item.name\" v-for=\"(item, index) in editableTabs\" :label=\"item.title\"\r\n                                    :name=\"item.name\">\r\n                                </el-tab-pane>\r\n                                <codemirror v-if=\"curClickTab != null\" v-model=\"curClickTab.sqlContent\"\r\n                                    :options=\"cmOptions\" />\r\n                            </el-tabs>\r\n                            <div v-if=\"curClickTab != null \r\n                          && curClickTab.success == true\r\n                           && curClickTab.showTableData != null\r\n                           && curClickTab.tableMeta\r\n                            && curClickTab.tableMeta.length > 0\">\r\n                                <el-table v-if=\"curClickTab != null \r\n                              && curClickTab.success == true\r\n                               && curClickTab.showTableData != null\r\n                               && curClickTab.tableMeta\r\n                                && curClickTab.tableMeta.length > 0\" :data=\"curClickTab.showTableData\"\r\n                                    style=\"width: 100%;\" @header-click=\"celldblclick\">\r\n                                    <el-table-column v-for=\"item in curClickTab.tableMeta\" :key=\"item.label\"\r\n                                        :prop=\"item.label\" :label=\"item.label\" width=\"180\">\r\n                                    </el-table-column>\r\n                                </el-table>\r\n                                <el-pagination v-if=\"curClickTab != null\" @size-change=\"handleSizeChange\"\r\n                                    @current-change=\"handleCurrentChange\" :current-page=\"curClickTab.currentPage\"\r\n                                    :page-sizes=\"[10, 20, 100, 200, 300, 400]\" :page-size=\"curClickTab.pageSize\"\r\n                                    layout=\"total, sizes, prev, pager, next, jumper\"\r\n                                    :total=\"curClickTab.tableData.length\">\r\n                                </el-pagination>\r\n                            </div>\r\n                            <div v-else>\r\n                                <span v-if=\"curClickTab && curClickTab.success == false\">{{curClickTab.errorMsg}}</span>\r\n                                <span v-else>查询中……</span>\r\n                            </div>\r\n                        </el-main>\r\n                    </el-container>\r\n                </el-container>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <div>\r\n            <el-dialog title=\"添加连接\" :visible.sync=\"addConnDialog\">\r\n                <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleForm\" label-width=\"100px\" class=\"demo-ruleForm\">\r\n                    <el-form-item label=\"连接名称\" prop=\"name\">\r\n                        <el-input v-model=\"ruleForm.name\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"连接类型\" prop=\"dbType\">\r\n                        <el-select v-model=\"ruleForm.dbType\" placeholder=\"请选择连接类型\">\r\n                            <el-option v-for=\"item in supportTypes\" :key=\"item\" :label=\"item\" :value=\"item\">\r\n                            </el-option>\r\n                        </el-select>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"主机\" prop=\"host\">\r\n                        <el-input v-model=\"ruleForm.host\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"用户\" prop=\"loginUser\">\r\n                        <el-input v-model=\"ruleForm.loginUser\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"密码\" prop=\"password\">\r\n                        <el-input v-model=\"ruleForm.password\" type=\"password\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item>\r\n                        <el-button type=\"primary\" @click=\"submitForm('ruleForm')\">立即创建</el-button>\r\n                        <el-button @click=\"resetForm('ruleForm')\">重置</el-button>\r\n                    </el-form-item>\r\n                </el-form>\r\n            </el-dialog>\r\n        </div>\r\n\r\n        <div>\r\n            <el-dialog title=\"编辑连接\" :visible.sync=\"editConnDialog\">\r\n                <el-form :model=\"editConnForm\" :rules=\"rules\" ref=\"editConnForm\" label-width=\"100px\"\r\n                    class=\"demo-ruleForm\">\r\n                    <el-form-item label=\"连接名称\" prop=\"name\">\r\n                        <el-input v-model=\"editConnForm.name\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"连接类型\" prop=\"dbType\">\r\n                        <el-select v-model=\"editConnForm.dbType\" placeholder=\"请选择连接类型\">\r\n                            <el-option v-for=\"item in supportTypes\" :key=\"item\" :label=\"item\" :value=\"item\">\r\n                            </el-option>\r\n                        </el-select>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"主机\" prop=\"host\">\r\n                        <el-input v-model=\"editConnForm.host\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"用户\" prop=\"loginUser\">\r\n                        <el-input v-model=\"editConnForm.loginUser\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"密码\" prop=\"password\">\r\n                        <el-input v-model=\"editConnForm.password\" type=\"password\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item>\r\n                        <el-button type=\"primary\" @click=\"submitUpdateForm('editConnForm')\">更新</el-button>\r\n                    </el-form-item>\r\n                </el-form>\r\n            </el-dialog>\r\n        </div>\r\n\r\n        <div>\r\n            <el-dialog title=\"表结构\" :visible.sync=\"tableDetailDiaglog\">\r\n                <div v-if=\"tableDetail && tableDetail.columnList\">\r\n                    <h3>字段结构</h3>\r\n                    <el-table :data=\"tableDetail.columnList\" style=\"width: 100%\">\r\n                        <el-table-column prop=\"name\" label=\"名称\">\r\n                        </el-table-column>\r\n                        <el-table-column prop=\"type\" label=\"类型\">\r\n                        </el-table-column>\r\n                        <el-table-column prop=\"autoIncrement\" label=\"自增\">\r\n                        </el-table-column>\r\n                        <el-table-column prop=\"size\" label=\"长度\">\r\n                        </el-table-column>\r\n                        <el-table-column prop=\"digits\" label=\"精度\">\r\n                        </el-table-column>\r\n                        <el-table-column prop=\"nullable\" label=\"空值\">\r\n                        </el-table-column>\r\n                        <el-table-column prop=\"defaultValue\" label=\"默认值\">\r\n                        </el-table-column>\r\n                        <el-table-column prop=\"remarks\" label=\"备注\">\r\n                        </el-table-column>\r\n                    </el-table>\r\n                </div>\r\n                <div v-if=\"tableDetail && tableDetail.indexList\">\r\n                    <h3>索引</h3>\r\n                    <el-table :data=\"tableDetail.indexList\" style=\"width: 100%\">\r\n                        <el-table-column prop=\"name\" label=\"名称\">\r\n                        </el-table-column>\r\n                        <el-table-column prop=\"fields\" label=\"字段列表\">\r\n                        </el-table-column>\r\n                        <el-table-column prop=\"unique\" label=\"唯一\">\r\n                        </el-table-column>\r\n                    </el-table>\r\n                </div>\r\n            </el-dialog>\r\n        </div>\r\n    </div>\r\n</template>\r\n  \r\n<script>\r\nimport { codemirror } from 'vue-codemirror'\r\n\r\nimport { listConns, deleteConn, updateConn, saveConn, listDbs, runSql, listTables, listSupportTypes, tableDetail } from '../api/database'\r\nexport default {\r\n    components: {\r\n        codemirror\r\n    },\r\n    props: ['conversation'],\r\n    created() {\r\n\r\n    },\r\n    data() {\r\n        return {\r\n            tableDetailDiaglog: false,\r\n            tableDetail: null,\r\n            showLeft: true,\r\n            //menu\r\n            props: {\r\n                label: 'name',\r\n                children: 'tables',\r\n                isLeaf: 'leaf'\r\n            },\r\n            cmOptions: {\r\n                tabSize: 30,\r\n                mode: 'text/x-sql   ',  // 模式\r\n                theme: 'idea',  // 主题\r\n                lineNumbers: true,  // 是否显示行数\r\n                line: true,\r\n                viewportMargin: Infinity,  // 处理高度自适应时搭配使用\r\n                highlightDifferences: true,\r\n                autofocus: false,\r\n                indentUnit: 2,\r\n                smartIndent: true,\r\n                readOnly: false,  // 只读\r\n                showCursorWhenSelecting: true,\r\n                firstLineNumber: 1,\r\n                // 更多配置查询 https://codemirror.net/doc/manual.html#config\r\n\r\n                matchBrackets: true,\r\n                lineMapping: true, //自动换行   \r\n                styleActiveLine: true,\r\n                extraKeys: { // 触发按键\r\n                    'Ctrl': 'autocomplete'\r\n                },\r\n                hintOptions: { // 自定义提示选项\r\n                    completeSingle: false, // 当匹配只有一项的时候是否自动补全\r\n                    tables: {\r\n                        users: ['name', 'score', 'birthDate'],\r\n                        countries: ['name', 'population', 'size'],\r\n                        score: ['zooao']\r\n                    }\r\n                }\r\n            },\r\n            codeSnippets: \"\",\r\n            editableTabsValue: '',\r\n            editableTabs: [],\r\n            tabIndex: 0,\r\n            //联动更新数据\r\n            connections: [],\r\n            curClickConnection: {},\r\n            //当前连接的数据库\r\n            curDbs: [],\r\n            curTables: [],\r\n            //当前sql内容\r\n            sqlContent: '',\r\n            //tabs map key: connId + '-' + dbName, value : tab\r\n            edittableTabsMap: new Map(),\r\n            edittableTabsNameMap: new Map(),\r\n            curClickTab: null,\r\n\r\n            //result\r\n\r\n            //添加连接表单\r\n            addConnDialog: false,\r\n            editConnDialog: false,\r\n            supportTypes: ['MYSQL', 'ORACLE'],\r\n            ruleForm: {\r\n                name: '',\r\n                dbType: '',\r\n                host: '',\r\n                loginUser: '',\r\n                password: ''\r\n            },\r\n            editConnForm: {},\r\n            rules: {\r\n                name: [\r\n                    { required: true, message: '请输入连接名称', trigger: 'blur' },\r\n                    { min: 3, max: 10, message: '长度在 3 到 10 个字符', trigger: 'blur' }\r\n                ],\r\n                dbType: [\r\n                    { required: true, message: '请选择连接类型', trigger: 'change' }\r\n                ],\r\n                host: [\r\n                    { required: true, message: '请填写主机地址', trigger: 'blur' }\r\n                ],\r\n                loginUser: [\r\n                    { required: true, message: '请填写用户名', trigger: 'blur' }\r\n                ],\r\n                password: [\r\n                    { required: true, message: '请填写密码', trigger: 'blur' }\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    destroyed() {\r\n        window.onbeforeunload = null\r\n    },\r\n\r\n    mounted() {\r\n        this.listTypes();\r\n        window.onbeforeunload = function (e) {\r\n            e = e || window.event;\r\n            // 兼容IE8和Firefox 4之前的版本\r\n            if (e) {\r\n                e.returnValue = '关闭提示';\r\n            }\r\n            // Chrome, Safari, Firefox 4+, Opera 12+ , IE 9+\r\n            return '关闭提示';\r\n        }\r\n    },\r\n\r\n    methods: {\r\n        //table menu\r\n        async handleTableCommand(command, data) {\r\n            if (command === 'desc') {\r\n                const result = await tableDetail(data)\r\n                if (result.columnList && result.columnList.length > 0) {\r\n                    this.tableDetailDiaglog = true;\r\n                    this.tableDetail = result;\r\n                } else {\r\n                    this.$message({ message: '表结构为空', type: 'error' })\r\n                }\r\n\r\n            }\r\n        },\r\n        //munu\r\n        handleCommand(command, data) {\r\n            if (command === 'edit') {\r\n                this.editConnForm = data;\r\n                this.editConnDialog = true;\r\n            } else if (command === 'delete') {\r\n                this.$confirm('确认删除吗？')\r\n                    .then(_ => {\r\n                        this.deletConn(data.id)\r\n                    })\r\n                    .catch(_ => { });\r\n            }\r\n        },\r\n        //复制\r\n        celldblclick(column, event) {\r\n            let save = function (e) {\r\n                e.clipboardData.setData('text/plain', column.label);\r\n                e.preventDefault();//阻止默认行为\r\n            }\r\n            document.addEventListener('copy', save);\r\n            document.execCommand(\"copy\");\r\n            document.removeEventListener('copy', save);\r\n            this.$message({ message: '复制成功', type: 'success' }) //加提示\r\n        },\r\n\r\n        //\r\n        async listTypes() {\r\n            this.supportTypes = await listSupportTypes()\r\n        },\r\n        handleSizeChange(val) {\r\n            this.curClickTab.pageSize = val;\r\n            this.handleCurrentChange(1)\r\n        },\r\n        handleCurrentChange(val) {\r\n            if (this.curClickTab.success == false) {\r\n                this.curClickTab.showTableData = [];\r\n                return;\r\n            }\r\n            this.curClickTab.currentPage = val;\r\n            if (!this.curClickTab || !this.curClickTab.tableData) {\r\n                this.curClickTab.showTableData = [];\r\n                return;\r\n            }\r\n            if (this.curClickTab.tableData.length < 1) {\r\n                this.curClickTab.showTableData = [];\r\n                return;\r\n            }\r\n            let skipSize = (val - 1) * this.curClickTab.pageSize;\r\n\r\n            this.curClickTab.showTableData = this.curClickTab.tableData.slice(skipSize, skipSize + this.curClickTab.pageSize)\r\n        },\r\n        //点击库\r\n        async dbClick(row) {\r\n            let tables = await listTables(row)\r\n            this.curTables = tables;\r\n        },\r\n        async tableClick(obj) {\r\n            //输入select预览\r\n            let sqlContent = `select * from ${obj.table} limit 100`;\r\n            let newTabName = ++this.tabIndex + '';\r\n            let tabKey = obj.connId + \"-\" + obj.database + '-' + obj.table;\r\n            let tab = this.edittableTabsMap.get(tabKey)\r\n            if (tab == null) {\r\n                tab = {\r\n                    title: obj.database + \"-\" + obj.table,\r\n                    name: newTabName,\r\n                    sqlContent: sqlContent,\r\n                    database: obj.database,\r\n                    connId: obj.connId,\r\n                    tableData: [],\r\n                    tableMeta: [],\r\n                    pageSize: 10,\r\n                    currentPage: 1,\r\n                    showTableData: [],\r\n                    success: false,\r\n                    errorMsg: '查询中'\r\n                }\r\n                this.editableTabs.push(tab);\r\n                this.edittableTabsMap.set(tabKey, tab)\r\n                this.edittableTabsNameMap.set(newTabName, tab)\r\n                this.editableTabsValue = newTabName;\r\n            } else {\r\n                //切换tab\r\n                tab.sqlContent = sqlContent\r\n                this.editableTabsValue = tab.name;\r\n            }\r\n            this.curClickTab = tab;\r\n            this.doQuery(sqlContent, tab)\r\n        },\r\n        handleOpen(key) {\r\n            if (key == 1) {\r\n                this.queryConns()\r\n            }\r\n        },\r\n        //运行sql\r\n        async executeSql(sql, connId, database) {\r\n            const params = {\r\n                sql: sql,\r\n                connId: connId,\r\n                database: database\r\n            }\r\n            const result = await runSql(params);\r\n            return result;\r\n        },\r\n        //获取数据库\r\n        async listDbs(id) {\r\n            const rest = await listDbs(id)\r\n            return rest;\r\n        },\r\n        //获取所有连接\r\n        async queryConns() {\r\n            const rest = await listConns()\r\n            this.connections = rest\r\n        },\r\n        //删除连接\r\n        async deletConn(id) {\r\n            const res = await deleteConn(id)\r\n            this.queryConns()\r\n        },\r\n        //编辑连接\r\n        async editUpdateConn(data) {\r\n            const rest = await updateConn(data)\r\n            this.queryConns()\r\n            this.editConnDialog = false\r\n        },\r\n        //新建连接\r\n        async saveConn(data) {\r\n            const rest = await saveConn(data)\r\n            this.queryConns()\r\n            this.addConnDialog = false\r\n        },\r\n        //new\r\n        async refreshDb(id) {\r\n            //获取连接数据库\r\n            const rest = await this.listDbs(id)\r\n\r\n            this.curDbs = rest\r\n            this.curTables = [];\r\n        },\r\n        //移除tab\r\n        removeTab(targetName) {\r\n            let tabs = this.editableTabs;\r\n            let activeName = this.editableTabsValue;\r\n            if (activeName === targetName) {\r\n                tabs.forEach((tab, index) => {\r\n                    if (tab.name === targetName) {\r\n                        let nextTab = tabs[index + 1] || tabs[index - 1];\r\n                        if (nextTab) {\r\n                            activeName = nextTab.name;\r\n                            this.curClickTab = nextTab\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            this.editableTabsValue = activeName;\r\n            let key = null\r\n            this.editableTabs = tabs.filter(tab => {\r\n                let flag = tab.name !== targetName\r\n                if (!flag) {\r\n                    key = tab.connId + \"-\" + tab.database;\r\n                }\r\n                return flag;\r\n            });\r\n            if (key !== null) {\r\n                this.edittableTabsMap.delete(key)\r\n            }\r\n            this.edittableTabsNameMap.delete(targetName)\r\n        },\r\n        clickTab(tab) {\r\n            let tabObj = this.edittableTabsNameMap.get(tab.name)\r\n            if (tabObj !== null) {\r\n                this.curClickTab = tabObj;\r\n                //this.handleCurrentChange(1)\r\n            }\r\n        },\r\n        //运行sql\r\n        runSql() {\r\n            this.doQuery(this.curClickTab.sqlContent, this.curClickTab)\r\n        },\r\n        checkRunSql() {\r\n            this.doQuery(window.getSelection().toString(), this.curClickTab)\r\n        },\r\n        async doQuery(sql, tab) {\r\n            const result = await this.executeSql(sql, tab.connId, tab.database)\r\n            //query\r\n            tab.tableMeta = result.tableMeta\r\n            tab.tableData = result.tableData\r\n            tab.success = result.success;\r\n            tab.errorMsg = result.errorMsg;\r\n            tab.sqlContent = result.executeSql;\r\n            this.handleCurrentChange(1)\r\n        },\r\n\r\n        //添加连接相关\r\n        submitForm(formName) {\r\n            this.$refs[formName].validate((valid) => {\r\n                if (valid) {\r\n                    this.saveConn(this.ruleForm)\r\n                }\r\n            });\r\n        },\r\n        resetForm(formName) {\r\n            this.$refs[formName].resetFields();\r\n        },\r\n\r\n        submitUpdateForm(formName) {\r\n            this.$refs[formName].validate((valid) => {\r\n                if (valid) {\r\n                    this.editUpdateConn(this.editConnForm)\r\n                }\r\n            });\r\n        },\r\n    }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.container div {\r\n    margin-bottom: 20px;\r\n    margin-top: 10px;\r\n}\r\n\r\n.el-header {\r\n    background-color: #B3C0D1;\r\n    color: #333;\r\n    line-height: 60px;\r\n}\r\n\r\n.el-aside {\r\n    color: #333;\r\n}\r\n\r\n.CodeMirror {\r\n    border: 1px solid #eee;\r\n    height: auto;\r\n    /* 编辑器盒子高度自适应 */\r\n    width: 30%;\r\n}\r\n\r\n\r\n.conversation-info {\r\n    height: 60px;\r\n    padding: 0 10px 0;\r\n    background-color: #e6e6e6;\r\n}\r\n\r\n.conversation-info .active {\r\n    height: 60px;\r\n    padding: 0 10px 0;\r\n    background-color: #cfcfcf;\r\n}\r\n\r\n.conversation-info:hover {\r\n    height: 60px;\r\n    padding: 0 10px 0;\r\n    background-color: #cfcfcf;\r\n}\r\n\r\n.conversation-info .menu {\r\n    position: fixed;\r\n    z-index: 1004;\r\n    background-color: #fff;\r\n    border-radius: 5px;\r\n}\r\n\r\n.conversation-info .wrapper {\r\n    display: flex;\r\n    height: 60px;\r\n    padding: 0 5px;\r\n    align-items: center;\r\n    border-radius: 10px;\r\n    overflow: hidden;\r\n}\r\n\r\n.el-badge {\r\n    top: 4px;\r\n    overflow: visible;\r\n}\r\n\r\n.conversation-avatar {\r\n    width: 40px;\r\n    height: 40px;\r\n}\r\n\r\n.conversation-detail {\r\n    margin-left: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n}\r\n\r\n.top-item {\r\n    height: 20px;\r\n    width: 260px;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n}\r\n\r\n.bottom-item {\r\n    height: 14px;\r\n    margin-top: 6px;\r\n    font-size: 12px;\r\n    color: #968b8b;\r\n    width: 200px;\r\n}\r\n\r\n.conversation-message {\r\n    float: left;\r\n}\r\n\r\n.ellipsis {\r\n    display: inline-block;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n}\r\n</style>\r\n  \n\n\n// WEBPACK FOOTER //\n// src/view/Database.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',[_c('el-header',{staticStyle:{\"text-align\":\"left\",\"font-size\":\"12px\",\"background-color\":\"white\"}},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){_vm.addConnDialog = true}}},[_vm._v(\"\\n                新建查询\\n            \")])],1),_vm._v(\" \"),_c('div',[_c('el-container',{staticStyle:{\"border\":\"1px solid #eee\"}},[(_vm.showLeft)?_c('el-aside',{staticStyle:{\"background-color\":\"rgb(238, 241, 246)\"},attrs:{\"width\":\"10%\"}},[_c('el-menu',{staticStyle:{\"background-color\":\"rgb(238, 241, 246)\"},on:{\"open\":_vm.handleOpen}},[_c('el-submenu',{attrs:{\"index\":\"1\"}},[_c('template',{slot:\"title\"},[_c('span',[_vm._v(\"我的连接\")])]),_vm._v(\" \"),_vm._l((_vm.connections),function(data){return _c('div',{key:data.id},[_c('el-dropdown',{staticStyle:{\"width\":\"100%\"},attrs:{\"placement\":\"bottom\"},on:{\"command\":function($event){return _vm.handleCommand($event, data)}}},[_c('el-menu-item',{attrs:{\"index\":data.name},on:{\"click\":function($event){return _vm.refreshDb(data.id)}}},[_vm._v(\"\\n                                        \"+_vm._s(data.name)+\"\\n                                    \")]),_vm._v(\" \"),_c('el-dropdown-menu',{attrs:{\"slot\":\"dropdown\"},slot:\"dropdown\"},[_c('el-dropdown-item',{attrs:{\"command\":\"edit\"}},[_vm._v(\"编辑\")]),_vm._v(\" \"),_c('el-dropdown-item',{attrs:{\"command\":\"delete\"}},[_vm._v(\"删除\")])],1)],1)],1)})],2)],1)],1):_vm._e(),_vm._v(\" \"),(_vm.showLeft)?_c('el-aside',{attrs:{\"width\":\"10%\"}},[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.curDbs,\"border\":\"\"},on:{\"cell-click\":_vm.dbClick}},[_c('el-table-column',{attrs:{\"prop\":\"database\",\"label\":\"库\"}})],1)],1):_vm._e(),_vm._v(\" \"),(_vm.showLeft)?_c('el-aside',{attrs:{\"width\":\"15%\"}},[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.curTables,\"border\":\"\"},on:{\"cell-click\":_vm.tableClick}},[_c('el-table-column',{attrs:{\"label\":\"表\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-dropdown',{staticStyle:{\"width\":\"100%\"},attrs:{\"placement\":\"bottom-start\"},on:{\"command\":function($event){return _vm.handleTableCommand($event, scope.row)}}},[_c('span',{staticStyle:{\"width\":\"100%\"}},[_vm._v(_vm._s(scope.row.table))]),_vm._v(\" \"),_c('el-dropdown-menu',{attrs:{\"slot\":\"dropdown\"},slot:\"dropdown\"},[_c('el-dropdown-item',{attrs:{\"command\":\"desc\"}},[_vm._v(\"查看结构\")])],1)],1)]}}],null,false,145013981)})],1)],1):_vm._e(),_vm._v(\" \"),(_vm.editableTabs.length > 0)?_c('el-container',[_c('el-header',{staticStyle:{\"text-align\":\"left\",\"font-size\":\"12px\"}},[_c('el-button',{on:{\"click\":_vm.runSql}},[_vm._v(\"运行\")]),_vm._v(\" \"),_c('el-button',{on:{\"click\":_vm.checkRunSql}},[_vm._v(\"选中运行\")]),_vm._v(\" \"),(_vm.showLeft)?_c('el-button',{on:{\"click\":function($event){_vm.showLeft = false}}},[_vm._v(\"收起侧边\")]):_vm._e(),_vm._v(\" \"),(!_vm.showLeft)?_c('el-button',{on:{\"click\":function($event){_vm.showLeft = true}}},[_vm._v(\"打开侧边\")]):_vm._e()],1),_vm._v(\" \"),_c('el-main',[_c('el-tabs',{attrs:{\"type\":\"card\",\"closable\":\"\"},on:{\"tab-remove\":_vm.removeTab,\"tab-click\":_vm.clickTab},model:{value:(_vm.editableTabsValue),callback:function ($$v) {_vm.editableTabsValue=$$v},expression:\"editableTabsValue\"}},[_vm._l((_vm.editableTabs),function(item,index){return _c('el-tab-pane',{key:item.name,attrs:{\"label\":item.title,\"name\":item.name}})}),_vm._v(\" \"),(_vm.curClickTab != null)?_c('codemirror',{attrs:{\"options\":_vm.cmOptions},model:{value:(_vm.curClickTab.sqlContent),callback:function ($$v) {_vm.$set(_vm.curClickTab, \"sqlContent\", $$v)},expression:\"curClickTab.sqlContent\"}}):_vm._e()],2),_vm._v(\" \"),(_vm.curClickTab != null \n                      && _vm.curClickTab.success == true\n                       && _vm.curClickTab.showTableData != null\n                       && _vm.curClickTab.tableMeta\n                        && _vm.curClickTab.tableMeta.length > 0)?_c('div',[(_vm.curClickTab != null \n                          && _vm.curClickTab.success == true\n                           && _vm.curClickTab.showTableData != null\n                           && _vm.curClickTab.tableMeta\n                            && _vm.curClickTab.tableMeta.length > 0)?_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.curClickTab.showTableData},on:{\"header-click\":_vm.celldblclick}},_vm._l((_vm.curClickTab.tableMeta),function(item){return _c('el-table-column',{key:item.label,attrs:{\"prop\":item.label,\"label\":item.label,\"width\":\"180\"}})}),1):_vm._e(),_vm._v(\" \"),(_vm.curClickTab != null)?_c('el-pagination',{attrs:{\"current-page\":_vm.curClickTab.currentPage,\"page-sizes\":[10, 20, 100, 200, 300, 400],\"page-size\":_vm.curClickTab.pageSize,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.curClickTab.tableData.length},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}}):_vm._e()],1):_c('div',[(_vm.curClickTab && _vm.curClickTab.success == false)?_c('span',[_vm._v(_vm._s(_vm.curClickTab.errorMsg))]):_c('span',[_vm._v(\"查询中……\")])])],1)],1):_vm._e()],1)],1)],1),_vm._v(\" \"),_c('div',[_c('el-dialog',{attrs:{\"title\":\"添加连接\",\"visible\":_vm.addConnDialog},on:{\"update:visible\":function($event){_vm.addConnDialog=$event}}},[_c('el-form',{ref:\"ruleForm\",staticClass:\"demo-ruleForm\",attrs:{\"model\":_vm.ruleForm,\"rules\":_vm.rules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"连接名称\",\"prop\":\"name\"}},[_c('el-input',{model:{value:(_vm.ruleForm.name),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"name\", $$v)},expression:\"ruleForm.name\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"连接类型\",\"prop\":\"dbType\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择连接类型\"},model:{value:(_vm.ruleForm.dbType),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"dbType\", $$v)},expression:\"ruleForm.dbType\"}},_vm._l((_vm.supportTypes),function(item){return _c('el-option',{key:item,attrs:{\"label\":item,\"value\":item}})}),1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"主机\",\"prop\":\"host\"}},[_c('el-input',{model:{value:(_vm.ruleForm.host),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"host\", $$v)},expression:\"ruleForm.host\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"用户\",\"prop\":\"loginUser\"}},[_c('el-input',{model:{value:(_vm.ruleForm.loginUser),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"loginUser\", $$v)},expression:\"ruleForm.loginUser\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"密码\",\"prop\":\"password\"}},[_c('el-input',{attrs:{\"type\":\"password\"},model:{value:(_vm.ruleForm.password),callback:function ($$v) {_vm.$set(_vm.ruleForm, \"password\", $$v)},expression:\"ruleForm.password\"}})],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.submitForm('ruleForm')}}},[_vm._v(\"立即创建\")]),_vm._v(\" \"),_c('el-button',{on:{\"click\":function($event){return _vm.resetForm('ruleForm')}}},[_vm._v(\"重置\")])],1)],1)],1)],1),_vm._v(\" \"),_c('div',[_c('el-dialog',{attrs:{\"title\":\"编辑连接\",\"visible\":_vm.editConnDialog},on:{\"update:visible\":function($event){_vm.editConnDialog=$event}}},[_c('el-form',{ref:\"editConnForm\",staticClass:\"demo-ruleForm\",attrs:{\"model\":_vm.editConnForm,\"rules\":_vm.rules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"连接名称\",\"prop\":\"name\"}},[_c('el-input',{model:{value:(_vm.editConnForm.name),callback:function ($$v) {_vm.$set(_vm.editConnForm, \"name\", $$v)},expression:\"editConnForm.name\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"连接类型\",\"prop\":\"dbType\"}},[_c('el-select',{attrs:{\"placeholder\":\"请选择连接类型\"},model:{value:(_vm.editConnForm.dbType),callback:function ($$v) {_vm.$set(_vm.editConnForm, \"dbType\", $$v)},expression:\"editConnForm.dbType\"}},_vm._l((_vm.supportTypes),function(item){return _c('el-option',{key:item,attrs:{\"label\":item,\"value\":item}})}),1)],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"主机\",\"prop\":\"host\"}},[_c('el-input',{model:{value:(_vm.editConnForm.host),callback:function ($$v) {_vm.$set(_vm.editConnForm, \"host\", $$v)},expression:\"editConnForm.host\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"用户\",\"prop\":\"loginUser\"}},[_c('el-input',{model:{value:(_vm.editConnForm.loginUser),callback:function ($$v) {_vm.$set(_vm.editConnForm, \"loginUser\", $$v)},expression:\"editConnForm.loginUser\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"密码\",\"prop\":\"password\"}},[_c('el-input',{attrs:{\"type\":\"password\"},model:{value:(_vm.editConnForm.password),callback:function ($$v) {_vm.$set(_vm.editConnForm, \"password\", $$v)},expression:\"editConnForm.password\"}})],1),_vm._v(\" \"),_c('el-form-item',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":function($event){return _vm.submitUpdateForm('editConnForm')}}},[_vm._v(\"更新\")])],1)],1)],1)],1),_vm._v(\" \"),_c('div',[_c('el-dialog',{attrs:{\"title\":\"表结构\",\"visible\":_vm.tableDetailDiaglog},on:{\"update:visible\":function($event){_vm.tableDetailDiaglog=$event}}},[(_vm.tableDetail && _vm.tableDetail.columnList)?_c('div',[_c('h3',[_vm._v(\"字段结构\")]),_vm._v(\" \"),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableDetail.columnList}},[_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"名称\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"type\",\"label\":\"类型\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"autoIncrement\",\"label\":\"自增\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"size\",\"label\":\"长度\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"digits\",\"label\":\"精度\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"nullable\",\"label\":\"空值\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"defaultValue\",\"label\":\"默认值\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"remarks\",\"label\":\"备注\"}})],1)],1):_vm._e(),_vm._v(\" \"),(_vm.tableDetail && _vm.tableDetail.indexList)?_c('div',[_c('h3',[_vm._v(\"索引\")]),_vm._v(\" \"),_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableDetail.indexList}},[_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"名称\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"fields\",\"label\":\"字段列表\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"unique\",\"label\":\"唯一\"}})],1)],1):_vm._e()])],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-2e873979\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/view/Database.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-2e873979\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Database.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Database.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Database.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-2e873979\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Database.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-2e873979\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/view/Database.vue\n// module id = null\n// module chunks = ","import Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport Database from '@/view/Database'\r\n\r\n\r\n\r\n\r\nVue.use(Router)\r\n\r\nexport default new Router({\r\n  routes: [\r\n    {\r\n      path: '/',\r\n      name: 'database',\r\n      component: Database,\r\n      meta: {\r\n        requiredAuth: false,\r\n        allowBack: false\r\n      }\r\n    }\r\n  ]\r\n})\r\n    \n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","// The Vue build version to load with the `import` command\r\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\r\nimport Vue from 'vue'\r\nimport App from './App'\r\nimport router from './router'\r\nimport ElementUI from 'element-ui';\r\nimport 'element-ui/lib/theme-chalk/index.css';\r\nimport AxiosConfig from './config/axiosConfig'\r\n\r\n// 全局引入vue-codemirror\r\nimport { codemirror } from 'vue-codemirror'\r\nimport 'vue-codemirror/node_modules/codemirror/lib/codemirror.css'\r\n// theme\r\nimport 'vue-codemirror/node_modules/codemirror/theme/idea.css'\r\n\r\n// addon\r\nimport 'vue-codemirror/node_modules/codemirror/addon/lint/lint.css'\r\nimport 'vue-codemirror/node_modules/codemirror/addon/fold/foldgutter.css'\r\n\r\nimport 'vue-codemirror/node_modules/codemirror/addon/hint/show-hint.css'\r\nimport 'vue-codemirror/node_modules/codemirror/addon/hint/show-hint.js'\r\nimport 'vue-codemirror/node_modules/codemirror/addon/hint/sql-hint.js'\r\n\r\n// lint\r\nimport 'vue-codemirror/node_modules/codemirror/addon/lint/lint.js'\r\nimport 'vue-codemirror/node_modules/codemirror/addon/lint/json-lint.js'\r\n\r\n// mode\r\nimport 'vue-codemirror/node_modules/codemirror/mode/xml/xml.js'\r\nimport 'vue-codemirror/node_modules/codemirror/mode/javascript/javascript'\r\nimport 'vue-codemirror/node_modules/codemirror/mode/htmlmixed/htmlmixed.js'\r\nimport 'vue-codemirror/node_modules/codemirror/mode/sql/sql.js'\r\n\r\n//括号匹配\r\nimport 'vue-codemirror/node_modules/codemirror/addon/edit/matchbrackets.js'\r\n\r\n\r\n\r\n// merge\r\nimport 'vue-codemirror/node_modules/codemirror/addon/merge/merge.js'\r\nimport 'vue-codemirror/node_modules/codemirror/addon/merge/merge.css'\r\n\r\n// fold\r\nimport 'vue-codemirror/node_modules/codemirror/addon/fold/foldcode.js'\r\nimport 'vue-codemirror/node_modules/codemirror/addon/fold/foldgutter.js'\r\nimport 'vue-codemirror/node_modules/codemirror/addon/fold/xml-fold.js'\r\n\r\nimport 'vue-codemirror/node_modules/codemirror/addon/edit/closebrackets.js'\r\n\r\nwindow.jsonlint = require(\"vue-codemirror/node_modules/codemirror/addon/lint/json-lint.js\");\r\n\r\nimport { Loading } from 'element-ui';\r\n\r\nVue.use(codemirror)\r\n\r\nVue.prototype.$axios = AxiosConfig.axiosService\r\nVue.prototype.$loading = Loading\r\nVue.use(ElementUI);\r\n\r\n//路由拦截器\r\n// router.beforeEach((to, from, next) => {\r\n//   if (to.matched.length != 0) {\r\n//     // if (to.meta) {\r\n//     //   if (to.meta.allowBack === false) {\r\n//     //     alert(1)\r\n//     //   }\r\n//     // } else {\r\n//     //   next()\r\n//     // }\r\n//     if (to.path === '/') {\r\n//       console.log(1)\r\n//       next()\r\n//     } else  {\r\n//       alert('no')\r\n//     }\r\n//     console.log(from)\r\n//     console.log(to)\r\n//   } else {\r\n//     next({\r\n//       path: '/',\r\n//     })\r\n//   }\r\n//   console.log(11111111111111111)\r\n// })\r\n/* eslint-disable no-new */\r\nnew Vue({\r\n  el: '#app',\r\n  render: h => h(App),\r\n  router,\r\n  components: { App },\r\n  template: '<App/>'\r\n})\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}